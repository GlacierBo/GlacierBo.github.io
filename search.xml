<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AOP 接口日志</title>
      <link href="/2019/05/21/yizi17/"/>
      <url>/2019/05/21/yizi17/</url>
      
        <content type="html"><![CDATA[<p><a name="AQ9Ug"></a></p><h4 id="RestLogAspect"><a href="#RestLogAspect" class="headerlink" title="RestLogAspect"></a>RestLogAspect</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestLogAspect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> RestHighLevelClient restHighLevelClient;</span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line">    <span class="keyword">private</span> ThreadLocal&lt;RestLog&gt; threadLocal = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"within(@org.springframework.web.bind.annotation.RestController *)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">springBeanPointcut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"springBeanPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logBefore</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == attributes) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        String paramData = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (!request.getRequestURI().contains(<span class="string">"/api/supervise/files"</span>)) &#123;</span><br><span class="line">            paramData = JSON.toJSONString(request.getParameterMap(), SerializerFeature.DisableCircularReferenceDetect, SerializerFeature.WriteMapNullValue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 保存接口信息</span></span><br><span class="line">        threadLocal.set(<span class="keyword">new</span> RestLog(LoggerUtil.getCliectIp(request), request.getRequestURI(), LoggerUtil.getRequestType(request)</span><br><span class="line">                , request.getMethod(), joinPoint.getSignature().getDeclaringTypeName() + <span class="string">"."</span> + joinPoint.getSignature().getName()</span><br><span class="line">                , paramData, request.getRequestedSessionId()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning</span>(value = <span class="string">"springBeanPointcut()"</span>, returning = <span class="string">"returnData"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logAfter</span><span class="params">(Object returnData)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == attributes) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HttpServletResponse response = attributes.getResponse();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == threadLocal.get() || <span class="keyword">null</span> == response) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        RestLog restLog = threadLocal.get();</span><br><span class="line">        <span class="comment">// 过滤图片接口请求</span></span><br><span class="line">        <span class="keyword">if</span> (!restLog.getUri().contains(<span class="string">"/api/supervise/files"</span>)) &#123;</span><br><span class="line">            restLog = threadLocal.get().init(JSON.toJSONString(returnData, SerializerFeature.DisableCircularReferenceDetect, SerializerFeature.WriteMapNullValue), response.getStatus());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            restLog = threadLocal.get().init(response.getStatus());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.save(restLog);</span><br><span class="line">        <span class="comment">// 写进 redis </span></span><br><span class="line">        <span class="keyword">this</span>.increment(<span class="keyword">this</span>.getApiKey(restLog.getUri(), restLog.getMethod()));</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing</span>(value = <span class="string">"springBeanPointcut()"</span>, throwing = <span class="string">"exception"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterThrowingAdvice</span><span class="params">(Throwable exception)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == threadLocal.get()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        RestLog restLog = threadLocal.get().exceptionMessage(exception.getMessage());</span><br><span class="line">        <span class="keyword">this</span>.save(restLog);</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(RestLog restLog)</span> </span>&#123;</span><br><span class="line">        IndexRequest indexRequest = <span class="keyword">new</span> IndexRequest(<span class="string">"rest-supervise-"</span> + DateFormatUtils.format(<span class="keyword">new</span> Date(), <span class="string">"yyyy.MM.dd"</span>), <span class="string">"doc"</span>, UUIDBase64Util.generate());</span><br><span class="line">        indexRequest.source(JSON.toJSONString(restLog), XContentType.JSON);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.restHighLevelClient.index(indexRequest);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">"RestLogAspect.save IOException:&#123;&#125;"</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">increment</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().increment(key, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getApiKey</span><span class="params">(String uri, String method)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.handleUri(uri) + <span class="string">"|"</span> + method.toLowerCase() + <span class="string">":"</span> + DateUtils.formatDate(<span class="keyword">new</span> Date(), <span class="string">"yyyyMMdd"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">handleUri</span><span class="params">(String uri)</span> </span>&#123;</span><br><span class="line">        StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (String s : uri.split(<span class="string">"/"</span>)) &#123;</span><br><span class="line">            stringBuilder.append(<span class="string">"/"</span>);</span><br><span class="line">            <span class="keyword">if</span> (s.matches(<span class="string">"\\d+"</span>) || <span class="number">22</span> == s.length()) &#123;</span><br><span class="line">                stringBuilder.append(<span class="string">"&#123;id&#125;"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuilder.append(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString().substring(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRestHighLevelClient</span><span class="params">(RestHighLevelClient restHighLevelClient)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.restHighLevelClient = restHighLevelClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisTemplate</span><span class="params">(StringRedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="UCulF"></a></p><h4 id="RestStatisticService"><a href="#RestStatisticService" class="headerlink" title="RestStatisticService"></a>RestStatisticService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveDaily</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Set&lt;String&gt; keys = <span class="keyword">this</span>.redisTemplate.keys(<span class="string">"api/*"</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> == keys) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  <span class="comment">// 将接口调用信息 保存到Redis</span></span><br><span class="line">      keys.forEach(</span><br><span class="line">              s -&gt; &#123;</span><br><span class="line">                  <span class="keyword">this</span>.restStatisticMapper.insert(<span class="keyword">new</span> RestStatistic(s, <span class="keyword">this</span>.redisTemplate.opsForValue().get(s)));</span><br><span class="line">                  <span class="keyword">this</span>.redisTemplate.delete(s);</span><br><span class="line">              &#125;</span><br><span class="line">      );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重启 jar 脚本</title>
      <link href="/2019/05/20/kpiv9g/"/>
      <url>/2019/05/20/kpiv9g/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"><span class="meta">#</span>description: 重启我的java 服务</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 杀死指定 java进程</span><br><span class="line">ps -ef|grep java| grep 'shop'|grep -v grep|cut -c 9-15|xargs kill -9 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">ps -ef|grep java| grep 'supervise'|grep -v grep|cut -c 9-15|xargs kill -9 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重启新的jar</span><br><span class="line">nohup java -jar shop-0.0.1-SNAPSHOT.jar &gt;&gt; shop.out &amp;</span><br><span class="line">echo "restart shop"</span><br><span class="line"></span><br><span class="line">nohup java -jar supervise-0.0.1-SNAPSHOT.jar &gt;&gt; supervise.out &amp;</span><br><span class="line">echo "restart supervise"</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Shiro Filter 自定义异常</title>
      <link href="/2019/05/16/mh8rfd/"/>
      <url>/2019/05/16/mh8rfd/</url>
      
        <content type="html"><![CDATA[<p>通常的Spring全局异常处理并不能处理Filter中的异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verifyUri</span><span class="params">(ServletRequest request, ServletResponse response)</span><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  request.getRequestDispatcher(AuthoritiesConstants.SHIRO_ERROR_EXCEPTION)</span><br><span class="line">    .forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个控制器，将过滤器的请求转发到控制器抛出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/error"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/shiro"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shiroError</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(ApiException.E_SHIRO_ACCESS_EXCEPTION);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis 如何才能做到高可用</title>
      <link href="/2019/04/29/pki3pw/"/>
      <url>/2019/04/29/pki3pw/</url>
      
        <content type="html"><![CDATA[<p>一个 slave 挂掉了，是不会影响可用性的，还有其它的 slave 在提供相同数据下的相同的对外的查询服务。<br>但是，如果 master node 死掉了，会怎么样？没法写数据了，写缓存的时候，全部失效了。slave node 还有什么用呢，没有 master 给它们复制数据了，系统相当于不可用了。</p><p>redis 的高可用架构，叫做 failover <strong>故障转移</strong>，也可以叫做主备切换。<br>master node 在故障时，自动检测，并且将某个 slave node 自动切换为 master node 的过程，叫做主备切换。这个过程，实现了 redis 的主从架构下的高可用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MQ保证消息消费的幂等性</title>
      <link href="/2019/04/13/tthkqu/"/>
      <url>/2019/04/13/tthkqu/</url>
      
        <content type="html"><![CDATA[<p>场景：<br>假设你这条消息已经消费过了，然后你重启了服务，消费过的消息没有同步到MQ，产生了二次消费。</p><p>思路：</p><ul><li>比如你拿个数据要写库，你先根据主键查一下，如果这数据都有了，你就别插入了，update 一下好吧。</li><li>比如你是写 Redis，那没问题了，反正每次都是 set，天然幂等性。</li><li>比如你不是上面两个场景，那做的稍微复杂一点，你需要让生产者发送每条数据的时候，里面加一个全局唯一的 id，类似订单 id 之类的东西，然后你这里消费到了之后，先根据这个 id 去比如 Redis 里查一下，之前消费过吗？如果没有消费过，你就处理，然后这个 id 写 Redis。如果消费过了，那你就别处理了，保证别重复处理相同的消息即可。</li><li>比如基于数据库的唯一键来保证重复数据不会重复插入多条。因为有唯一键约束了，重复数据插入只会报错，不会导致数据库中出现脏数据。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Rabbit MQ 和 Kafka 如何保证高可用？</title>
      <link href="/2019/04/13/ol6we2/"/>
      <url>/2019/04/13/ol6we2/</url>
      
        <content type="html"><![CDATA[<p><a name="345f7519"></a></p><h3 id="Rabbit-MQ-3种模式"><a href="#Rabbit-MQ-3种模式" class="headerlink" title="Rabbit MQ 3种模式"></a>Rabbit MQ 3种模式</h3><p><a name="fdd8e0fe"></a></p><h4 id="单机模式"><a href="#单机模式" class="headerlink" title="单机模式"></a>单机模式</h4><p>Demo级别</p><p><a name="81944fa4"></a></p><h4 id="普通集群模式（无高可用性）"><a href="#普通集群模式（无高可用性）" class="headerlink" title="普通集群模式（无高可用性）"></a>普通集群模式（无高可用性）</h4><p>普通集群模式，意思就是在多台机器上启动多个 RabbitMQ 实例，每个机器启动一个。<br><strong>这方案主要是提高吞吐量的</strong>，就是说让集群中多个节点来服务某个元数据的读写操作。<br><br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555155728234-a8334527-88ab-431a-ab9e-3422fd8ce7ab.png#align=left&amp;display=inline&amp;height=385&amp;name=image.png&amp;originHeight=567&amp;originWidth=883&amp;size=51726&amp;status=done&amp;width=601" alt="image.png"></p><p><a name="339b391d"></a></p><h4 id="镜像集群模式（高可用性）"><a href="#镜像集群模式（高可用性）" class="headerlink" title="镜像集群模式（高可用性）"></a>镜像集群模式（高可用性）</h4><p>这种模式，才是所谓的 RabbitMQ 的高可用模式。跟普通集群模式不一样的是，在镜像集群模式下，你创建的 queue，无论元数据还是 queue 里的消息都会<strong>存在于多个实例上</strong>，就是说，每个 RabbitMQ 节点都有这个 queue 的一个完整镜像，包含 queue 的全部数据的意思。然后每次你写消息到 queue 的时候，都会<strong>自动把消息同步到多个实例的 queue 上</strong>。<br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555155629703-abe738be-aacf-40d0-a41a-87f3e1fca4f6.png#align=left&amp;display=inline&amp;height=355&amp;name=image.png&amp;originHeight=470&amp;originWidth=630&amp;size=24344&amp;status=done&amp;width=476" alt="image.png"><br><a name="e299cc49"></a></p><h3 id="Kafka-的高可用性"><a href="#Kafka-的高可用性" class="headerlink" title="Kafka 的高可用性"></a>Kafka 的高可用性</h3><p>Kafka 一个最基本的架构认识：由多个 broker 组成，每个 broker 是一个节点；你创建一个 topic，这个 topic 可以划分为多个 partition，每个 partition 可以存在于不同的 broker 上，每个 partition 就放一部分数据。<br>我们假设创建了一个 topic，指定其 partition 数量是 3 个，分别在三台机器上。但是，如果第二台机器宕机了，会导致这个 topic 的 1/3 的数据就丢了，因此这个是做不到高可用的。<br><br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555156249389-18f7cdbd-1c43-4910-8229-43e1d47dedc8.png#align=left&amp;display=inline&amp;height=236&amp;name=image.png&amp;originHeight=331&amp;originWidth=712&amp;size=16230&amp;status=done&amp;width=507" alt="image.png"><br>Kafka 0.8 以后，提供了<strong> HA 机制</strong>，就是 replica（复制品） 副本机制。每个 partition 的数据都会同步到其它机器上，形成自己的多个 replica 副本。所有 replica 会选举一个 leader 出来，那么生产和消费都跟这个 leader 打交道，然后其他 replica 就是 follower。写的时候，leader 会负责把数据同步到所有 follower 上去，读的时候就直接读 leader 上的数据即可。<br><br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555156541938-6329ff78-6d5c-4df1-b8b4-2c52d1cb1ae1.png#align=left&amp;display=inline&amp;height=466&amp;name=image.png&amp;originHeight=578&amp;originWidth=721&amp;size=44726&amp;status=done&amp;width=582" alt="image.png"><br>如果某个 broker 宕机了，没事儿，那个 broker上面的 partition 在其他机器上都有副本的，如果这上面有某个 partition 的 leader，那么此时会从 follower 中<strong>重新选举</strong>一个新的 leader 出来，大家继续读写那个新的 leader 即可。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Rabbit MQ 和 Erlang 版本不匹配</title>
      <link href="/2019/04/13/whicyg/"/>
      <url>/2019/04/13/whicyg/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.erlang.org/downloads" target="_blank" rel="noopener">安装Erlang</a><br><a href="http://www.rabbitmq.com/download.html" target="_blank" rel="noopener">安装RabbitMQ</a><br><strong>安装的时候版本需要匹配</strong>  <a href="http://www.rabbitmq.com/which-erlang.html" target="_blank" rel="noopener">传送门</a> <br>之前因为版本不匹配的问题，搞环境搞了一上午。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 异常捕捉</title>
      <link href="/2019/04/08/ipg6ut/"/>
      <url>/2019/04/08/ipg6ut/</url>
      
        <content type="html"><![CDATA[<p>打印出异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">function()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">    print(msg)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Liqiubase 已有表添加字段</title>
      <link href="/2019/03/08/tr0vha/"/>
      <url>/2019/03/08/tr0vha/</url>
      
        <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">changeSet</span> <span class="attr">id</span>=<span class="string">"20181214081250-1"</span> <span class="attr">author</span>=<span class="string">"jhipster"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">addColumn</span> <span class="attr">tableName</span>=<span class="string">"jhi_rx"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"place"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"mobile_phone"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">addColumn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">addColumn</span> <span class="attr">tableName</span>=<span class="string">"drug"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"brand"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">addColumn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">addColumn</span> <span class="attr">tableName</span>=<span class="string">"hospital"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"qy_code"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">addColumn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">changeSet</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Csrf 过滤</title>
      <link href="/2019/03/04/odrvx9/"/>
      <url>/2019/03/04/odrvx9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netmatch.drug.admin.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.support.RequestDataValueProcessor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"requestDataValueProcessor"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsrfRequestDataValueProcessor</span> <span class="keyword">implements</span> <span class="title">RequestDataValueProcessor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Pattern DISABLE_CSRF_TOKEN_PATTERN = Pattern.compile(<span class="string">"(?i)^(GET|HEAD|TRACE|OPTIONS)$"</span>);</span><br><span class="line">    <span class="keyword">private</span> String DISABLE_CSRF_TOKEN_ATTR = <span class="string">"DISABLE_CSRF_TOKEN_ATTR"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processAction</span><span class="params">(HttpServletRequest request, String action, String method)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (method != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.DISABLE_CSRF_TOKEN_PATTERN.matcher(method).matches()) &#123;</span><br><span class="line">            request.setAttribute(<span class="keyword">this</span>.DISABLE_CSRF_TOKEN_ATTR, Boolean.TRUE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            request.removeAttribute(<span class="keyword">this</span>.DISABLE_CSRF_TOKEN_ATTR);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processFormFieldValue</span><span class="params">(HttpServletRequest request, String name, String value, String type)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 原样返回value</span></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getExtraHiddenFields</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 此处是当使用spring的taglib标签&lt;form:form&gt;创建表单时候，增加的隐藏域参数</span></span><br><span class="line">        Map&lt;String, String&gt; hiddenFields = Maps.newHashMap();</span><br><span class="line">        hiddenFields.put(CsrfTokenManager.CSRF_PARAM_NAME,</span><br><span class="line">            CsrfTokenManager.createTokenForSession(request.getSession()));</span><br><span class="line">        <span class="keyword">return</span> hiddenFields;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processUrl</span><span class="params">(HttpServletRequest request, String url)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 原样返回url</span></span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图片上传接口不过滤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netmatch.drug.admin.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.filter.authc.UserFilter;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.servlet.ShiroHttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsrfTokenFilter</span> <span class="keyword">extends</span> <span class="title">UserFilter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEADER_POST = <span class="string">"POST"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; IGNORE_URL = Lists.newArrayList(<span class="string">"/files/image"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isAccessAllowed</span><span class="params">(ServletRequest request, ServletResponse response, Object mappedValue)</span> </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        <span class="keyword">if</span> (!HEADER_POST.equals(((HttpServletRequest) request).getMethod())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(IGNORE_URL.contains(((ShiroHttpServletRequest) request).getRequestURI()))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String csrfToken = CsrfTokenManager.getTokenFromRequest(request);</span><br><span class="line">        <span class="keyword">if</span> (csrfToken == <span class="keyword">null</span> || !csrfToken.equals(httpRequest.getSession().getAttribute(</span><br><span class="line">            CsrfTokenManager.CSRF_TOKEN_FOR_SESSION_ATTR_NAME))) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        httpRequest.getSession().removeAttribute(CsrfTokenManager.CSRF_TOKEN_FOR_SESSION_ATTR_NAME);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onAccessDenied</span><span class="params">(ServletRequest request, ServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        <span class="keyword">if</span> (currentUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">            currentUser.logout();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.redirectToLogin(request, response);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netmatch.drug.admin.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsrfTokenManager</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 隐藏域参数名称</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CSRF_PARAM_NAME = <span class="string">"csrfToken"</span>;</span><br><span class="line">    <span class="comment">// session中csrfToken参数名称</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CSRF_TOKEN_FOR_SESSION_ATTR_NAME = CsrfTokenManager.class.getName() + <span class="string">".tokenval"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">CsrfTokenManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在session中创建csrfToken</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createTokenForSession</span><span class="params">(HttpSession session)</span> </span>&#123;</span><br><span class="line">        String token = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">synchronized</span> (session) &#123;</span><br><span class="line">            token = (String) session</span><br><span class="line">                .getAttribute(CSRF_TOKEN_FOR_SESSION_ATTR_NAME);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> == token) &#123;</span><br><span class="line">                token = UUID.randomUUID().toString();</span><br><span class="line">                session.setAttribute(CSRF_TOKEN_FOR_SESSION_ATTR_NAME, token);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTokenFromRequest</span><span class="params">(ServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> request.getParameter(CSRF_PARAM_NAME);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>B+树</title>
      <link href="/2019/02/28/zt1sir/"/>
      <url>/2019/02/28/zt1sir/</url>
      
        <content type="html"><![CDATA[<p>MySQL索引底层实现。</p><p><a name="b271e427"></a></p><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><p><strong>目的</strong>：提高查询效率</p><p><strong>原理</strong>：通过不断的缩小想要获得数据的范围来筛选出最终想要的结果，同时把随机的事件变成顺序的事件，也就是我们总是通过同一种查找方式来锁定数据。</p><p><strong>数据结构</strong>：B+树</p><p><strong>图解：</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1551345494120-a46d004f-eeca-4cca-9770-330344c41185.png#align=left&amp;display=inline&amp;height=300&amp;originHeight=300&amp;originWidth=624&amp;size=0&amp;status=done&amp;width=624" alt></p><p><a name="dc39bddb"></a></p><h4 id="b-树的查找过程"><a href="#b-树的查找过程" class="headerlink" title="b+树的查找过程"></a>b+树的查找过程</h4><p>如图所示，如果要查找数据项29，那么首先会把磁盘块1由磁盘加载到内存，此时发生一次IO，在内存中用二分查找确定29在17和35之间，锁定磁盘块1的P2指针，内存时间因为非常短（相比磁盘的IO）可以忽略不计，通过磁盘块1的P2指针的磁盘地址把磁盘块3由磁盘加载到内存，发生第二次IO，29在26和30之间，锁定磁盘块3的P2指针，通过指针加载磁盘块8到内存，发生第三次IO，同时内存中做二分查找找到29，结束查询，总计三次IO。真实的情况是，3层的b+树可以表示上百万的数据，如果上百万的数据查找只需要三次IO，性能提高将是巨大的，如果没有索引，每个数据项都要发生一次IO，那么总共需要百万次的IO，显然成本非常非常高。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Shiro csrf 拦截请求</title>
      <link href="/2019/02/27/nymfrm/"/>
      <url>/2019/02/27/nymfrm/</url>
      
        <content type="html"><![CDATA[<p>今天遇到一个问题，我的 form 表单写的没有错，用 js 生成的 action，不知道什么原因一直提交不上去。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">id</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeState</span>(<span class="params">that</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> id = $(that).attr(<span class="string">"applyid"</span>);</span><br><span class="line">    $(<span class="string">"#applyId"</span>).val(id);</span><br><span class="line">    $(<span class="string">"#form"</span>).attr(<span class="string">"action"</span>,<span class="string">"/feedbacks/"</span>+id+<span class="string">"/state"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交表单页面直接跳到登录页面，推测是请求给 shiro 拦截了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// shiro 拦截器</span></span><br><span class="line">filterMap.put(<span class="string">"csrf"</span>, <span class="keyword">new</span> CsrfTokenFilter());</span><br><span class="line">filterChainDefinitionMap.put(<span class="string">"/**"</span>, <span class="string">"authc,csrf"</span>);</span><br></pre></td></tr></table></figure><p>最后随便加了个action。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span> role=<span class="string">"form"</span> id=<span class="string">"form"</span> th:action=<span class="string">"@&#123;/user&#125;"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure><p>html审查元素的时候，页面会增加一个csrfToken，可以正常提交了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"csrfToken"</span> <span class="attr">value</span>=<span class="string">"2bdaaca5-ebf9-450f-a25a-8faacd018965"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>点击弹出模态框，显示详情</title>
      <link href="/2019/02/27/rm7t7v/"/>
      <url>/2019/02/27/rm7t7v/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">onpenShowModal</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"#show"</span>).modal(<span class="string">'show'</span>);</span><br><span class="line">            <span class="keyword">var</span> title = $(obj).data(<span class="string">"title"</span>)</span><br><span class="line">            $(<span class="string">"#modalContent"</span>).html(title);</span><br><span class="line">        &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mt-btn"</span> <span class="attr">th:data-title</span>=<span class="string">"*&#123;content&#125;"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">onclick</span>=<span class="string">"onpenShowModal(this)"</span>&gt;</span>查看详情<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal"</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"modal-title text-md text-dark"</span>&gt;</span>消息详情<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted"</span> <span class="attr">id</span>=<span class="string">"modalContent"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-white"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary confirm"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 下载图片</title>
      <link href="/2019/02/27/oek0m9/"/>
      <url>/2019/02/27/oek0m9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="comment"># 'Host': 'i.meizitu.net',</span></span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'content-type'</span>: <span class="string">"application/json"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s = requests.session()  <span class="comment"># 保留会话</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downIMG</span><span class="params">(url, fileName)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = str(url).split(<span class="string">"?"</span>)[<span class="number">0</span>]</span><br><span class="line">        LAST = str(url).split(<span class="string">"."</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># 没有文件夹，则创建文件夹</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'D:/Image/'</span> + fileName):  </span><br><span class="line">            os.mkdir(<span class="string">'D:/Image/'</span> + fileName)</span><br><span class="line"></span><br><span class="line">        url_re = s.get(url.strip(), headers=headers)</span><br><span class="line">        <span class="keyword">if</span> url_re.status_code == <span class="number">200</span>:</span><br><span class="line">            open(<span class="string">"D:/Image/"</span> + fileName + <span class="string">"/"</span> + initImageName() + <span class="string">"."</span> + LAST, <span class="string">'wb'</span>).write(url_re.content)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"image-run-error.csv"</span>, <span class="string">"a"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span>  csvfile:</span><br><span class="line">            writer = csv.writer(csvfile)</span><br><span class="line">            writer.writerow(fileName, url)</span><br><span class="line">            </span><br><span class="line"> <span class="comment"># 随机生成文件名           </span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">initImageName</span><span class="params">()</span>:</span></span><br><span class="line">    ran_str = <span class="string">''</span>.join(random.sample(string.ascii_letters + string.digits, <span class="number">8</span>))</span><br><span class="line">    <span class="keyword">return</span> ran_str</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    images = pd.read_csv(<span class="string">"drug-image-url.csv"</span>)</span><br><span class="line">    images.fillna(<span class="string">''</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">    images = np.array(images).tolist()</span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            downIMG(image[<span class="number">2</span>], image[<span class="number">0</span>] + <span class="string">","</span> + str(image[<span class="number">1</span>]).replace(<span class="string">"*"</span>, <span class="string">"_"</span>))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">          <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python URL汉字加密</title>
      <link href="/2019/02/20/pg2fh5/"/>
      <url>/2019/02/20/pg2fh5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">quote(keyWord)</span><br></pre></td></tr></table></figure><p>加密对应 js的 encodeURI() 方法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信验证服务器有效性</title>
      <link href="/2019/02/19/dd16dl/"/>
      <url>/2019/02/19/dd16dl/</url>
      
        <content type="html"><![CDATA[<p>后台代码</p><p><a name="ac341bea"></a></p><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.util.Sha1Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WechatController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 微信请求接收</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/weixin"</span>, produces = <span class="string">"text/plain;charset=UTF-8"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">weixin</span><span class="params">(@RequestParam(name = <span class="string">"signature"</span>)</span> String signature,</span></span><br><span class="line"><span class="function">                                 @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"timestamp"</span>)</span> String timestamp,</span></span><br><span class="line"><span class="function">                                 @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"nonce"</span>)</span> String nonce,</span></span><br><span class="line"><span class="function">                                 @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"echostr"</span>)</span> String echostr) </span>&#123;</span><br><span class="line">        String auths[] = &#123;token(自己填的 token), timestamp, nonce&#125;;</span><br><span class="line">        Arrays.sort(auths);</span><br><span class="line">        <span class="keyword">if</span> (signature.equals(Sha1Util.getSha1(auths[<span class="number">0</span>] + auths[<span class="number">1</span>] + auths[<span class="number">2</span>]))) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != echostr) &#123;</span><br><span class="line">                <span class="keyword">return</span> ResponseEntity.ok(<span class="keyword">this</span>.auth(echostr));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> echostr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">auth</span><span class="params">(String echostr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> echostr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(<span class="string">"测试成功！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="3f0e9cfd"></a></p><h3 id="Sha1-加密"><a href="#Sha1-加密" class="headerlink" title="Sha1 加密"></a>Sha1 加密</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sha1Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSha1</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == str || <span class="number">0</span> == str.length())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span>[] hexDigits = &#123; <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>,</span><br><span class="line">                <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest mdTemp = MessageDigest.getInstance(<span class="string">"SHA1"</span>);</span><br><span class="line">            mdTemp.update(str.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] md = mdTemp.digest();</span><br><span class="line">            <span class="keyword">int</span> j = md.length;</span><br><span class="line">            <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line">                <span class="keyword">byte</span> byte0 = md[i];</span><br><span class="line">                buf[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                buf[k++] = hexDigits[byte0 &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(buf);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="70b08133"></a></p><h3 id="微信后台配置"><a href="#微信后台配置" class="headerlink" title="微信后台配置"></a>微信后台配置</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1550543352291-07d9129e-ff54-408f-9741-c35d8ea5f0d4.png#align=left&amp;display=inline&amp;height=738&amp;name=%7BEM%5DBC%5DZXS5%287UG%5DUG%25ZRHM.png&amp;originHeight=801&amp;originWidth=810&amp;size=62939&amp;width=746" alt="{EM]BC]ZXS5(7UG]UG%ZRHM.png"></p><p>后台的 token 就是控制器中自己配置的 token<br>url 就填 http://你的链接/weixin</p><p>提交就验证成功了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 常用命令</title>
      <link href="/2019/02/19/afc9rc/"/>
      <url>/2019/02/19/afc9rc/</url>
      
        <content type="html"><![CDATA[<p><strong>镜像</strong>（<code>Image</code>）和<strong>容器</strong>（<code>Container</code>）的关系，就像是面向对象程序设计中的 <code>类</code> 和 <code>实例</code> 一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p><p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的命名空间。因此容器可以拥有自己的 <code>root</code> 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。</p><p>容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。</p><p>文件拷贝</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp /home/ubuntu/Java/ROOT f853e6b9cc5f:/var/tmp/tomcat/apache-tomcat-8.5.8/webapps/</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看所有镜像</span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除镜像 Image</span><br><span class="line">docker rmi 5b821518a2dd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 正在运行容器</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看docker容器</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 启动tomcat:7镜像</span><br><span class="line">docker run -p 8080:8080 tomcat:7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以后台守护进程的方式启动</span><br><span class="line">docker run -d tomcat:8 </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 停止一个容器</span><br><span class="line">docker stop b840db1d182b</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 进入一个容器</span><br><span class="line">docker attach d48b21a7e439</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 进入正在运行容器并以命令行交互</span><br><span class="line">docker exec -it e9410ee182bd /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以交互的方式运行</span><br><span class="line">docker run -i -t -p 8081:8080 tomcat:7 /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i：表示以“交互模式”运行容器  </span><br><span class="line">-t：表示容器启动后会进入其命令行  </span><br><span class="line">-v：表示需要将本地哪个目录挂载到容器中，格式：-v &lt;宿主机目录&gt;:&lt;容器目录&gt;</span><br></pre></td></tr></table></figure><p>删除停止的容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps --all -q -f status=exited)</span><br></pre></td></tr></table></figure><p>删除没有使用的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f $(docker images | grep "&lt;none&gt;" | awk "&#123;print \$3&#125;")</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 部署 SpringBoot 项目</title>
      <link href="/2019/02/18/hbggtg/"/>
      <url>/2019/02/18/hbggtg/</url>
      
        <content type="html"><![CDATA[<p>docker 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p>启动 docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure><p>java 8 环境，Dockerfile<br>spring boot 打好的 jar 包 wechat-0.0.1-SNAPSHOT.jar，放在 Dockerfile 同级目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">VOLUME /tmp</span><br><span class="line">RUN mkdir /app</span><br><span class="line">ADD wechat-0.0.1-SNAPSHOT.jar app.jar</span><br><span class="line">RUN bash -c 'touch /app.jar'</span><br><span class="line">ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]</span><br></pre></td></tr></table></figure><p>根据 Dockerfile 生成镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t wechat .</span><br></pre></td></tr></table></figure><p>将项目映射到8080端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8090 wechat</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 一次 rm -rf</title>
      <link href="/2019/02/14/iqkrda/"/>
      <url>/2019/02/14/iqkrda/</url>
      
        <content type="html"><![CDATA[<p>我准备删除 /usr/local 目录下的 admin 开头的多个文件</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1550111607385-5c66fb1d-3a5a-49e4-89de-666b642d061b.png#align=left&amp;display=inline&amp;height=129&amp;name=image.png&amp;originHeight=129&amp;originWidth=757&amp;size=120517&amp;width=757" alt="image.png"></p><p>我使用了 rm -rf amdin* ，命令没有输错，但是删除完了之后再查看这个目录，很多东西都被删除了。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1550111657401-1fd3cf0a-7d46-4a2a-a827-b7ea436a6bc4.png#align=left&amp;display=inline&amp;height=64&amp;name=image.png&amp;originHeight=64&amp;originWidth=480&amp;size=33875&amp;width=480" alt="image.png"></p><p>吓尿了 - - <br>我还不知道是什么原因，只能当作给自己提个醒，以后尽量不要用通配，全名删除更安全。<br>庆幸的是 /usr/local 目录下没有什么特别重要的文件。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ECharts 图形自适应</title>
      <link href="/2019/01/23/hhqa8g/"/>
      <url>/2019/01/23/hhqa8g/</url>
      
        <content type="html"><![CDATA[<p><a name="ec695aab"></a></p><h3 id="官方实例"><a href="#官方实例" class="headerlink" title="官方实例"></a>官方实例</h3><p><a href="https://echarts.baidu.com/examples/" target="_blank" rel="noopener">https://echarts.baidu.com/examples/</a></p><p><a name="Example"></a></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">//初始化</span></span><br><span class="line">   initMatch = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="comment">// 饼图</span></span><br><span class="line">     initPieChart(<span class="string">"pie1Counts"</span>, <span class="string">""</span>, pieTypes, pie1Counts, []);</span><br><span class="line">     <span class="comment">// 树状图</span></span><br><span class="line">     initBarChart(<span class="string">"rxUse"</span>, pieTypes, pie1Counts);</span><br><span class="line">   &#125;</span><br><span class="line">   initMatch();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>饼图</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  initPieChart = <span class="function"><span class="keyword">function</span> (<span class="params">id, title, legendata, seriesdata, colorDate</span>) </span>&#123;</span><br><span class="line">    myChart = echarts.init(<span class="built_in">document</span>.getElementById(id));</span><br><span class="line">    initPieOption(title, legendata, seriesdata, colorDate);</span><br><span class="line">    myChart.setOption(option);</span><br><span class="line">    <span class="comment">// 添加到 charts 数组</span></span><br><span class="line">    charts.push(myChart)</span><br><span class="line">  &#125;;</span><br><span class="line">  initPieOption = <span class="function"><span class="keyword">function</span> (<span class="params">title, legendata, seriesdata, colorDate</span>) </span>&#123;</span><br><span class="line">    option = &#123;</span><br><span class="line">      tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,</span><br><span class="line">        formatter: <span class="string">"&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      series: [</span><br><span class="line">        &#123;</span><br><span class="line">          name: <span class="string">'访问来源'</span>,</span><br><span class="line">          type: <span class="string">'pie'</span>,</span><br><span class="line">          radius: [<span class="string">'50%'</span>, <span class="string">'70%'</span>],</span><br><span class="line">          avoidLabelOverlap: <span class="literal">false</span>,</span><br><span class="line">          label: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">              show: <span class="literal">false</span>,</span><br><span class="line">              position: <span class="string">'center'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">              show: <span class="literal">true</span>,</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                fontSize: <span class="string">'14'</span>,</span><br><span class="line">                fontWeight: <span class="string">'bold'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          labelLine: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">              show: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          data: seriesdata</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="comment">// color: colorDate</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>柱状图</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  initBarChart = <span class="function"><span class="keyword">function</span> (<span class="params">id, legendata, seriesdata</span>) </span>&#123;</span><br><span class="line">    myChart = echarts.init(<span class="built_in">document</span>.getElementById(id));</span><br><span class="line">    initBarOption(legendata, seriesdata);</span><br><span class="line">    myChart.setOption(option);</span><br><span class="line">    charts.push(myChart)</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 初始化柱状图</span></span><br><span class="line">  initBarOption = <span class="function"><span class="keyword">function</span> (<span class="params">legendata, seriesdata</span>) </span>&#123;</span><br><span class="line">    option = &#123;</span><br><span class="line">      xAxis: &#123;</span><br><span class="line">        type: <span class="string">'category'</span>,</span><br><span class="line">        data: legendata</span><br><span class="line">      &#125;,</span><br><span class="line">      yAxis: &#123;</span><br><span class="line">        type: <span class="string">'value'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      series: [&#123;</span><br><span class="line">        data: seriesdata,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        <span class="comment">// begin</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> colorList = [<span class="string">'rgb(205,85,85)'</span>, <span class="string">'rgb(210,205,30)'</span>, <span class="string">'rgb(135,206,235)'</span>, <span class="string">'rgb(152,80,152)'</span>, <span class="string">'rgb(238,232,170)'</span>, <span class="string">'rgb(205,85,85)'</span>, <span class="string">'rgb(210,205,30)'</span>];</span><br><span class="line">              <span class="keyword">return</span> colorList[params.dataIndex];</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 鼠标悬停</span></span><br><span class="line">          emphasis: &#123;</span><br><span class="line">            shadowBlur: <span class="number">10</span>,</span><br><span class="line">            shadowOffsetX: <span class="number">0</span>,</span><br><span class="line">            shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">     ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ECharts 自适应</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> charts = [];</span><br><span class="line">  <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 在所有图表之后</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; charts.length; i++) &#123;</span><br><span class="line">      charts[i].resize();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2019</title>
      <link href="/2019/01/21/ddeoiq/"/>
      <url>/2019/01/21/ddeoiq/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这里用打开的方式来记录我 2019 年正在做的事。</p></blockquote><p><a name="a25661f0"></a></p><h3 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h3><p>红色标题是自己觉得很值得花时间去读一读的书（博客好像看不到书的颜色，语雀是可以看到的）。</p><p><a name="0c989298"></a></p><h4 id="《断舍离》"><a href="#《断舍离》" class="headerlink" title="《断舍离》"></a>《断舍离》</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/113243/1548256569265-05fc6172-5816-4247-a3c2-6606e0dd96c8.jpeg#align=left&amp;display=inline&amp;height=332&amp;name=IMG_20190123_231322.jpg&amp;originHeight=3024&amp;originWidth=4032&amp;size=5697442&amp;width=442" alt="IMG_20190123_231322.jpg"><br>不仅仅是一本关于整理的书，更多的是告诉我们整理好自己身边的环境，减少不需要东西，收拾好自己，让自己配的上使用更好的物品，成为更好的自己。</p><p><a name="334584bd"></a></p><h4 id="《我爱这哭不出来的浪漫》"><a href="#《我爱这哭不出来的浪漫》" class="headerlink" title="《我爱这哭不出来的浪漫》"></a>《我爱这哭不出来的浪漫》</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/113243/1548256614247-7557311e-1068-4a6d-8b61-e021efc326ab.jpeg#align=left&amp;display=inline&amp;height=329&amp;name=IMG_20190113_191815.jpg&amp;originHeight=3024&amp;originWidth=4032&amp;size=4644996&amp;width=438" alt="IMG_20190113_191815.jpg"></p><p>我看的第二本关于摄影的书，告诉很简单的一个道理：喜欢就要去追寻。</p><p><a name="16b6703f"></a></p><h4 id="《小岛经济学》"><a href="#《小岛经济学》" class="headerlink" title="《小岛经济学》"></a>《小岛经济学》</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/113243/1548256638502-60132e6a-fdc2-44e1-9410-1263b40d2723.jpeg#align=left&amp;display=inline&amp;height=328&amp;name=IMG_20190119_082045.jpg&amp;originHeight=3024&amp;originWidth=4032&amp;size=5401297&amp;width=437" alt="IMG_20190119_082045.jpg"></p><p>经济学相关的书，通俗易懂，鱼、美元和经济的故事。大概花上 1 整天就能看完。这里是<a href="https://www.yuque.com/glacier/blog/xamvei" target="_blank" rel="noopener">读书笔记</a>。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Liquibase 使用</title>
      <link href="/2019/01/18/vyag1a/"/>
      <url>/2019/01/18/vyag1a/</url>
      
        <content type="html"><![CDATA[<p><a name="17277b5e"></a></p><h4 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.liquibase&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;liquibase-core&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><a name="767fa455"></a></p><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1547778589258-b6dddbbf-2d29-4e81-b176-1fbe108d47c3.png#align=left&amp;display=inline&amp;height=511&amp;name=PN%7B%603%28%5BC%5D2NWR%40X%7DEX%40TSAK.png&amp;originHeight=511&amp;originWidth=437&amp;size=23713&amp;width=437" alt="PN{`3([C]2NWR@X}EX@TSAK.png"></p><p><a name="edb07f34"></a></p><h4 id="master-xml"><a href="#master-xml" class="headerlink" title="master.xml"></a>master.xml</h4><p>加载配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">databaseChangeLog</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811101308_add_entity_Student_Info.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811101309_add_entity_Teacher_Info.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811101310_add_entity_Course.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811182205_add_entity_CoursePlan.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811181517_add_entity_Student_Appraise.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811181517_add_entity_Teacher_Appraise.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201812042230_add_entity_User.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201812080813_add_entity_Permission.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201812182216_add_entity_User_File.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/99999999999999_import_data.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseChangeLog</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a name="import_data.xml"></a></p><h4 id="import-data-xml"><a href="#import-data-xml" class="headerlink" title="import_data.xml"></a>import_data.xml</h4><p>导入数据</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">databaseChangeLog</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">changeSet</span> <span class="attr">id</span>=<span class="string">"course"</span> <span class="attr">author</span>=<span class="string">"jhipster"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">loadData</span> <span class="attr">encoding</span>=<span class="string">"UTF-8"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">file</span>=<span class="string">"config/liquibase/course.csv"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">separator</span>=<span class="string">";"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">tableName</span>=<span class="string">"course"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">changeSet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">databaseChangeLog</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a name="entity.xml"></a></p><h4 id="entity-xml"><a href="#entity-xml" class="headerlink" title="entity.xml"></a>entity.xml</h4><p>生成数据库表结构</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">databaseChangeLog</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"now"</span> <span class="attr">value</span>=<span class="string">"now()"</span> <span class="attr">dbms</span>=<span class="string">"mysql"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">changeSet</span> <span class="attr">id</span>=<span class="string">"course"</span> <span class="attr">author</span>=<span class="string">"jhipster"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">preConditions</span> <span class="attr">onFail</span>=<span class="string">"MARK_RAN"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">not</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tableExists</span> <span class="attr">tableName</span>=<span class="string">"course"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">not</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">preConditions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">createTable</span> <span class="attr">tableName</span>=<span class="string">"course"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"varchar(22)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">primaryKey</span>=<span class="string">"true"</span> <span class="attr">nullable</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"varchar(50)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"teacher_id"</span> <span class="attr">type</span>=<span class="string">"varchar(22)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"jhi_date"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"start_time"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"end_time"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"created_by"</span> <span class="attr">type</span>=<span class="string">"varchar(20)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"created_date"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span> <span class="attr">defaultValueDate</span>=<span class="string">"$&#123;now&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">createTable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">changeSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseChangeLog</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建博客</title>
      <link href="/2019/01/12/fs3clw/"/>
      <url>/2019/01/12/fs3clw/</url>
      
        <content type="html"><![CDATA[<p><a name="224e2ccd"></a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><a name="8ce7a425"></a></p><h4 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h4><p>验证<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></p><p><a name="d9787e5d"></a></p><h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><p>验证<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></p><p><a name="5eb35f54"></a></p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>新建文件夹，打开命令行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo -v</span><br><span class="line"><span class="meta">#</span> 初始化hexo</span><br><span class="line">hexo init </span><br><span class="line"><span class="meta">#</span> 安装组件</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p><a name="f7c225ca"></a></p><h4 id="Hexo-二次创建"><a href="#Hexo-二次创建" class="headerlink" title="Hexo 二次创建"></a>Hexo 二次创建</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 打开一个文件夹</span><br><span class="line">hexo init filename</span><br><span class="line">cd filename</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><a name="c656f5fa"></a></p><h4 id="配置到-GitHub"><a href="#配置到-GitHub" class="headerlink" title="配置到 GitHub"></a>配置到 GitHub</h4><p>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourname"</span><br><span class="line">git config --global user.email "youremail"</span><br></pre></td></tr></table></figure><p>在配置文件<code>_config.yml</code>中，找到<code>Deployment</code>，进行修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 上传到github</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><a name="0af99467"></a></p><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hello-world   //在此处添加你的标题。</span><br><span class="line">date: 2014-11-7 08:55:29   //在此处输入你编辑这篇文章的时间。</span><br><span class="line">categories: Exercise   //在此处输入这篇文章的分类。</span><br><span class="line">toc: true  //在此处设定是否开启目录，需要主题支持。</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><a name="ba3abe67"></a></p><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p><a name="457c4cd8"></a></p><h4 id="添加来必力评论"><a href="#添加来必力评论" class="headerlink" title="添加来必力评论"></a>添加来必力评论</h4><p>修改<code>_config.yml</code>文件，开启来必利评论：<code>livere: true</code></p><p>然后在<code>\yilia\layout\_partial\post</code>目录下添加<code>livere.ejs</code> ，然后把livere安装代码复制进去，文件内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 来必力City版安装代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"你的那个id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">   (function(d, s) &#123;</span><br><span class="line">       var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line">       if (typeof LivereTower === 'function') &#123; return; &#125;</span><br><span class="line">       j = d.createElement(s);</span><br><span class="line">       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';</span><br><span class="line">       j.async = true;</span><br><span class="line">       e.parentNode.insertBefore(j, e);</span><br><span class="line">   &#125;)(document, 'script');</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span> 为正常使用来必力评论功能请激活JavaScript<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- City版安装代码已完成 --&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>\yilia\layout\_partial</code> 的<code>article.ejs</code>中<code>&lt;% if (!index &amp;&amp; post.comments){ %&gt;</code> ，后面添加如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.livere)&#123; %&gt;</span><br><span class="line">&lt;%- partial(<span class="string">'post/livere'</span>, &#123;</span><br><span class="line">    key: post.slug,</span><br><span class="line">    title: post.title,</span><br><span class="line">    url: config.url+url_for(post.path)</span><br><span class="line">  &#125;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><a name="32e8159e"></a></p><h4 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ioliu.cn/2017/add-valine-comments-to-your-blog/#comments</span><br></pre></td></tr></table></figure><p><a name="9970ad07"></a></p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p><a name="b1e50306"></a></p><h4 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h4><ol><li><strong>fexo</strong></li></ol><p><a href="http://forsigner.com/fexo-doc-zh-cn/" target="_blank" rel="noopener">http://forsigner.com/fexo-doc-zh-cn/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git clone git@github.com:forsigner/fexo.git themes/fexo</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Maupassant</strong></li></ol><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">https://www.haomwei.com/technology/maupassant-hexo.html</a></p><p>上面两个是我比较喜欢的主题，你也可以在<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">这里</a>寻找更多主题</p><p><a name="c6a60f3a"></a></p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--网易云音乐播放器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">450</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=0&amp;id=2268258693&amp;auto=0&amp;height=430"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a name="40ad65b3"></a></p><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>修改配置文件，添加如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Extensions</span><br><span class="line"><span class="meta">#</span># Plugins: http://hexo.io/plugins/</span><br><span class="line"><span class="meta">#</span>RSS订阅</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line"><span class="meta">#</span>Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br></pre></td></tr></table></figure><p><a name="d777a966"></a></p><h3 id="同步语雀知识库"><a href="#同步语雀知识库" class="headerlink" title="同步语雀知识库"></a>同步语雀知识库</h3><p>参考：<a href="https://www.yuque.com/page/luan.ma/yuque2blog" target="_blank" rel="noopener">https://www.yuque.com/page/luan.ma/yuque2blog</a></p><p>安装 yuque-hexo<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g yuque-hexo</span><br></pre></td></tr></table></figure></p><p>注册语雀，创建知识库，获得你的个人路径和知识库的名字，比如我的博客的知识库是 <a href="https://www.yuque.com/glacier/github.io" target="_blank" rel="noopener">https://www.yuque.com/glacier/github.io</a></p><p>修改 package.json 文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "name": "your hexo project", //如果原来已经有这个不用再加了，直接加下面的就可以</span><br><span class="line">   "yuqueConfig": &#123;</span><br><span class="line">    "baseUrl": "https://www.yuque.com/api/v2",</span><br><span class="line">    "login": "glacier",</span><br><span class="line">    "repo": "github.io",</span><br><span class="line">    "mdNameFormat": "slug",</span><br><span class="line">    "postPath": "source/_posts/yuque"</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>同步文章<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yuque-hexo sync</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>好的代码应该是便于维护的</title>
      <link href="/2019/01/12/qdnk8n/"/>
      <url>/2019/01/12/qdnk8n/</url>
      
        <content type="html"><![CDATA[<p><a name="53a74911"></a></p><h4 id="好的命名比注释要好"><a href="#好的命名比注释要好" class="headerlink" title="好的命名比注释要好"></a>好的命名比注释要好</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 团队统一定义标记：</span><br><span class="line">TODO  待处理的问题</span><br><span class="line">FIXME  已知有问题的代码</span><br><span class="line">HACK 不得不采用的粗糙的解决方案</span><br></pre></td></tr></table></figure><p>样式修改 - 要么原生 JS 要么 JQuery  用 submit 事件</p><p>复制过来不用的代码都删掉</p><p>源代码中的 html 注释是一种厌物, 增加阅读难度</p><p><a name="ee656aa1"></a></p><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a><a href></a>注释</h4><p>注释模板 不要留空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 典型的烂注释：</span><br><span class="line">不恰当的信息</span><br><span class="line">废弃的注释</span><br><span class="line">冗余注释</span><br><span class="line">糟糕的注释</span><br><span class="line">注释掉的代码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 唯一真正好的注释是你想办法不去写的注释：</span><br><span class="line">不要有循规式注释，比如 setter/getter 注释</span><br><span class="line">不要添加日志式注释，比如修改时间等信息（ git 可以做的事情）</span><br><span class="line">注释一定是表达代码之外的东西，代码可以包含的内容，注释中一定不要出现</span><br><span class="line">如果有必要注释，请注释意图（why），而不要去注释实现（how)，大家都会看代码</span><br><span class="line">适当添加警示注释</span><br></pre></td></tr></table></figure><p><a name="25c971d2"></a></p><h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a><a href></a>命名</h4><p>了解一些设计模式，这样看到名字里有proxy，builder，factory之类的，就心领神会了<br><br>代码都是分模块的，有的是core，有的是util，parser之类的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">尽可能使用标准命名方法，比如设计模式，通用学术名词等</span><br><span class="line">命名要找更有表现力的词</span><br><span class="line">使用更专业的词，比如不用 get 而使用 fetch 或者 download</span><br><span class="line">避免空泛的名字，像 tmp</span><br><span class="line">使用具体的名字来细致的描述事物</span><br><span class="line">给变量名带上重要的细节，比如加上单位ms等</span><br><span class="line">为作用域大的名字采用更长的名字，作用域小的使用短名字</span><br><span class="line">变量类型为布尔值表达加上 is，has ，can ，should 这样的词会更明确</span><br><span class="line">变量名称长短应该与其作用域对应</span><br><span class="line">别害怕长名称，长而具有描述性的名称比短而令人费解的名称好</span><br><span class="line">函数名称应该说明副作用，名称应该表达函数，变量或类的一切信息，请不要掩盖副作用，比如 CreateAndReturnXXX</span><br></pre></td></tr></table></figure><p><a name="commit"></a></p><h4 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h4><blockquote><p>commit 的 message 一定要规范</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">feat：新功能（feature）</span><br><span class="line">fix：修补bug</span><br><span class="line">docs：文档（documentation）</span><br><span class="line">style： 格式（不影响代码运行的变动）</span><br><span class="line">refactor：重构（即不是新增功能，也不是修改bug的代码变动）</span><br><span class="line">test：增加测试</span><br><span class="line">chore：构建过程或辅助工具的变动</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/W9VOXPPZgChwi9daJKIH2A" target="_blank" rel="noopener">如何避免自己写的代码成为别人眼中的一坨屎！</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 数据库操作</title>
      <link href="/2019/01/12/ecsgz2/"/>
      <url>/2019/01/12/ecsgz2/</url>
      
        <content type="html"><![CDATA[<p><a name="5504977c"></a></p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a><a href></a>Example 1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line"><span class="comment"># Connect to the database</span></span><br><span class="line">connection = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line">                             user=<span class="string">'user'</span>,</span><br><span class="line">                             password=<span class="string">'passwd'</span>,</span><br><span class="line">                             db=<span class="string">'db'</span>,</span><br><span class="line">                             charset=<span class="string">'utf8mb4'</span>,</span><br><span class="line">                             cursorclass=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">        <span class="comment"># Create a new record</span></span><br><span class="line">        sql = <span class="string">"INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)"</span></span><br><span class="line">        cursor.execute(sql, (<span class="string">'webmaster@python.org'</span>, <span class="string">'very-secret'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># connection is not autocommit by default. So you must commit to save</span></span><br><span class="line">    <span class="comment"># your changes.</span></span><br><span class="line">    connection.commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">        <span class="comment"># Read a single record</span></span><br><span class="line">        sql = <span class="string">"SELECT `id`, `password` FROM `users` WHERE `email`=%s"</span></span><br><span class="line">        cursor.execute(sql, (<span class="string">'webmaster@python.org'</span>,))</span><br><span class="line">        result = cursor.fetchone()</span><br><span class="line">        print(result)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    connection.close()</span><br></pre></td></tr></table></figure><p><a name="5f3a8aa0"></a></p><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a><a href></a>Example 2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接数据库</span></span><br><span class="line">conn = pymysql.connect(</span><br><span class="line">    <span class="string">"localhost"</span>,</span><br><span class="line">    <span class="string">"root"</span>,</span><br><span class="line">    <span class="string">"123456"</span>,</span><br><span class="line">    <span class="string">"drug"</span>,</span><br><span class="line">    charset=<span class="string">'utf8'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">sqlCount = <span class="string">"SELECT COUNT(0) FROM DWRS_SIM_SDML WHERE YPDM ='210000280' AND YPGG = '0.25g*16'"</span></span><br><span class="line">sqlResult = <span class="string">"SELECT YPFL FROM DWRS_SIM_SDML WHERE YPDM ='210000280' AND YPGG = '0.25g*16'"</span></span><br><span class="line"></span><br><span class="line">typeList = [<span class="string">"西药"</span>, <span class="string">"中药"</span>, <span class="string">"草药"</span>, <span class="string">"诊疗"</span>, <span class="string">"医院制剂"</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findType</span><span class="params">(sqlCount, sqlResult)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            count = cursor.execute(sqlCount)</span><br><span class="line">            conn.commit()</span><br><span class="line">            print(count)</span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                cursor.execute(sqlResult)</span><br><span class="line">                result = cursor.fetchone()</span><br><span class="line">                result = str(result[<span class="number">0</span>]).replace(<span class="string">"0"</span>, <span class="string">""</span>)</span><br><span class="line">                print(typeList[int(result)])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"出错啦！"</span>)</span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭数据库连接</span></span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    findType(sqlCount, sqlResult)</span><br></pre></td></tr></table></figure><p><a name="ed81be50"></a></p><h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a><a href></a>Example 3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDrugs</span><span class="params">(start, end)</span>:</span></span><br><span class="line">    sql = <span class="string">"SELECT drugSpec.code,spec.name FROM drug  LEFT JOIN drug_spec AS drugSpec ON drug.id = drugSpec.drug_id "</span> \</span><br><span class="line">          <span class="string">"LEFT JOIN spec ON spec.id = drugSpec.spec_id LIMIT %s,%s"</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            cursor.execute(sql, (start, end,))</span><br><span class="line">            result = cursor.fetchall()</span><br><span class="line">            print(result)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"find error!"</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令</title>
      <link href="/2019/01/12/yby6w6/"/>
      <url>/2019/01/12/yby6w6/</url>
      
        <content type="html"><![CDATA[<p><a name="bbab013d"></a></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a><a href></a>初始化</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入你的github 注册的ID</span></span><br><span class="line">git config --global user.name <span class="string">"Your Name"</span></span><br><span class="line"><span class="comment"># 输入你的github 注册的邮箱</span></span><br><span class="line">git config --global user.email <span class="string">"email@example.com"</span></span><br></pre></td></tr></table></figure><p>生成指定名字的密钥</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"邮箱地址"</span> -f ~/.ssh/github_jslite</span><br></pre></td></tr></table></figure><p>会生成 github_jslite 和 github_jslite.pub 这两个文件 </p><p>登陆GitHub，在settings里面添加SSH Keys，添加SSH Key，在Key文本框里粘贴github_jslite.pub文件的内容，即可。</p><p><a name="d59558ca"></a></p><h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a><a href></a>提交</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认是master分支</span></span><br><span class="line">git add file1.txt</span><br><span class="line">git add file2.txt file3.txt</span><br><span class="line">git commit -m <span class="string">"add 3 files."</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## commit 之后github 仓库内容还不会更改，只会在你本地仓库进行修改，还需要push到仓库</span></span><br><span class="line"><span class="comment">## 推送主分支</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">## 推送dev分支</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><p><a name="561db996"></a></p><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a><a href></a>删除文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm -rf directory</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">'remove dir'</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><a name="987c9d3a"></a></p><h4 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a><a href></a>拉取代码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p><a name="ecc3f411"></a></p><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a><a href></a>分支</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建dev分支 并切换到dev</span></span><br><span class="line">git checkout -b dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## 相当于下面两条命令</span></span><br><span class="line">git branch dev</span><br><span class="line">git checkout dev</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 查看当前分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment">## 将dev合并到 master</span></span><br><span class="line">git merge dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除dev分支</span></span><br><span class="line">git branch -d dev </span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看当前分支</span></span><br><span class="line">git branch   <span class="comment">## 删除dev，这时候只剩master，主分支了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 推送主分支</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">## 推送dev分支</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><p><a name="14d7e087"></a></p><h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a><a href></a>版本回退</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看历史</span></span><br><span class="line">$ git log</span><br><span class="line">commit <span class="number">87</span>c9ab105e1ff2886d5f603954d72859cba8769a</span><br><span class="line">Author: heyglacier &lt;<span class="number">2284711614</span>@qq.com&gt;</span><br><span class="line">Date:   Wed Jun <span class="number">27</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">19</span> <span class="number">2018</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    specEditController 页面误删？</span><br><span class="line"></span><br><span class="line"><span class="comment">## 回退到指定版本</span></span><br><span class="line">$ git reset --hard d53a025f3e760fe1f1a7a116750def90cd1aaa5d</span><br></pre></td></tr></table></figure><p>PS：<br><br>命令行还是比较麻烦的，还是建议使用IDEA这样的集成工具。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 配置定时任务</title>
      <link href="/2019/01/12/gzrdqs/"/>
      <url>/2019/01/12/gzrdqs/</url>
      
        <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置定时任务</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="number">00</span> <span class="number">03</span> * * * /<span class="keyword">data</span>/mysql_backup.sh</span><br><span class="line">*  *  *  *  *   command</span><br><span class="line">分 时 天  月 星期 命令</span><br></pre></td></tr></table></figure><p><strong>shell 脚本（定时备份 mysql 数据库，并根据当天日期打包）</strong><br>**<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">backupdir=/data/mysql_backup</span><br><span class="line">time=` date +%Y%m%d%H`</span><br><span class="line">mysqldump -uroot -p'netmatch' drug-app &gt; drug_app_$time.sql</span><br><span class="line">mysqldump -uroot -p'netmatch' drug-rx &gt; drug_rx_$time.sql</span><br><span class="line">mysqldump -uroot -p'netmatch' drug-task &gt; drug_task_$time.sql</span><br><span class="line">tar -cf sql_$time.tar *.sql</span><br><span class="line">rm -rf *.sql</span><br><span class="line">find $backupdir -name "db_*.sql.gz" -type f -mtime +5 -exec rm &#123;&#125; \; &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
