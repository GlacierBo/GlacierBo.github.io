<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>233333大佬的qq音乐爬虫</title>
      <link href="/2020/05/22/yuque/233333%E5%A4%A7%E4%BD%AC%E7%9A%84qq%E9%9F%B3%E4%B9%90%E7%88%AC%E8%99%AB/"/>
      <url>/2020/05/22/yuque/233333%E5%A4%A7%E4%BD%AC%E7%9A%84qq%E9%9F%B3%E4%B9%90%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, json, re</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="comment"># 文件路径</span></span><br><span class="line">MUSIC_PATH=<span class="string">'music/'</span></span><br><span class="line"><span class="comment"># chrome driver路径</span></span><br><span class="line">DRIVERS_PATH=<span class="string">'drivers/chromedriver-mac'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParseQQmusic</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,ranking)</span>:</span></span><br><span class="line">        self.url =ranking</span><br><span class="line">        self.music_name =<span class="literal">None</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1'</span>,</span><br><span class="line">            <span class="string">'Referer'</span>: <span class="string">'https://u.y.qq.com'</span></span><br><span class="line">        &#125;</span><br><span class="line">        self.session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_music</span><span class="params">(self,songmid)</span>:</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"req"</span>: &#123;</span><br><span class="line">                <span class="string">"module"</span>: <span class="string">"CDN.SrfCdnDispatchServer"</span>,</span><br><span class="line">                <span class="string">"method"</span>: <span class="string">"GetCdnDispatch"</span>,</span><br><span class="line">                <span class="string">"param"</span>: &#123;</span><br><span class="line">                    <span class="string">"guid"</span>: <span class="string">''</span>,</span><br><span class="line">                    <span class="string">"calltype"</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="string">"userip"</span>: <span class="string">""</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"req_0"</span>: &#123;</span><br><span class="line">                <span class="string">"module"</span>: <span class="string">"vkey.GetVkeyServer"</span>,</span><br><span class="line">                <span class="string">"method"</span>: <span class="string">"CgiGetVkey"</span>,</span><br><span class="line">                <span class="string">"param"</span>: &#123;</span><br><span class="line">                    <span class="string">"guid"</span>: str(random_with_N_digits(<span class="number">9</span>)),</span><br><span class="line">                    <span class="string">"songmid"</span>: [songmid],</span><br><span class="line">                    <span class="string">"songtype"</span>: [<span class="number">0</span>],</span><br><span class="line">                    <span class="string">"uin"</span>: <span class="string">"0"</span>,</span><br><span class="line">                    <span class="string">"loginflag"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="string">"platform"</span>: <span class="string">"20"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"comm"</span>: &#123;</span><br><span class="line">                <span class="string">"uin"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"format"</span>: <span class="string">"json"</span>,</span><br><span class="line">                <span class="string">"ct"</span>: <span class="number">24</span>,</span><br><span class="line">                <span class="string">"cv"</span>: <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        api = <span class="string">'http://u.y.qq.com/cgi-bin/musicu.fcg'</span></span><br><span class="line">        jsondata = json.dumps(data)</span><br><span class="line">        response = self.session.post(api, data=jsondata)</span><br><span class="line">        resJson = json.loads(response.content, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">        sip = resJson.get(<span class="string">'req_0'</span>).get(<span class="string">'data'</span>).get(<span class="string">'sip'</span>)[<span class="number">0</span>]</span><br><span class="line">        purl = resJson.get(<span class="string">'req_0'</span>).get(<span class="string">'data'</span>).get(<span class="string">'midurlinfo'</span>)[<span class="number">0</span>].get(<span class="string">'purl'</span>)</span><br><span class="line">        <span class="keyword">if</span> purl != <span class="literal">None</span> <span class="keyword">and</span> purl.strip():</span><br><span class="line">            print(self.music_name)</span><br><span class="line">            download_url= sip + purl</span><br><span class="line">            <span class="comment"># 下载到本地</span></span><br><span class="line">            music = self.session.get(download_url,headers=self.headers)</span><br><span class="line">            <span class="comment"># 文件名去除特殊符号</span></span><br><span class="line">            <span class="keyword">with</span> open(MUSIC_PATH + <span class="string">"&#123;&#125;.m4a"</span>.format(re.sub(<span class="string">r'[\s+|@&lt;&gt;:\\"/]'</span>, <span class="string">''</span>, self.music_name)), <span class="string">"wb"</span>) <span class="keyword">as</span> m:</span><br><span class="line">                m.write(music.content)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">view_html</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># qq音乐页面是js加载的，这里用chrome headless模式访问</span></span><br><span class="line">        option = webdriver.ChromeOptions()</span><br><span class="line">        option.add_argument(<span class="string">'headless'</span>)</span><br><span class="line">        driver = webdriver.Chrome(DRIVERS_PATH, chrome_options=option)</span><br><span class="line">        <span class="comment"># 排行榜页面</span></span><br><span class="line">        driver.get(self.url)</span><br><span class="line">        print(driver.title)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 等待播放列表加载完毕</span></span><br><span class="line">            WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.CLASS_NAME, <span class="string">"songlist__songname_txt"</span>)))</span><br><span class="line">            lis = driver.find_elements_by_class_name(<span class="string">'songlist__songname_txt'</span>)</span><br><span class="line">            pattern = re.compile(<span class="string">r'https://y.qq.com/n/yqq/song/(\S+).html'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(lis.__len__()):</span><br><span class="line">                li = lis.__getitem__(i)</span><br><span class="line">                a = li.find_element_by_class_name(<span class="string">'js_song'</span>)</span><br><span class="line">                <span class="comment"># 获得songid</span></span><br><span class="line">                href = a.get_attribute(<span class="string">'href'</span>)</span><br><span class="line">                music_name = a.get_attribute(<span class="string">'title'</span>)</span><br><span class="line">                self.music_name=music_name</span><br><span class="line"></span><br><span class="line">                m = pattern.match(href)</span><br><span class="line">                self.download_music(m.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            driver.quit()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.view_html()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_with_N_digits</span><span class="params">(n)</span>:</span></span><br><span class="line">    range_start = <span class="number">10</span>**(n<span class="number">-1</span>)</span><br><span class="line">    range_end = (<span class="number">10</span>**n)<span class="number">-1</span></span><br><span class="line">    <span class="keyword">return</span> randint(range_start, range_end)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 目标 抖音排行榜</span></span><br><span class="line">    qm = ParseQQmusic(<span class="string">'https://y.qq.com/n/yqq/toplist/60.html#stat=y_new.toplist.menu.60'</span>)</span><br><span class="line">    qm.start()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy 实现豆瓣电影爬虫</title>
      <link href="/2020/05/22/yuque/Scrapy%20%E5%AE%9E%E7%8E%B0%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E7%88%AC%E8%99%AB/"/>
      <url>/2020/05/22/yuque/Scrapy%20%E5%AE%9E%E7%8E%B0%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本 demo 只做学习之用，请勿转载和商用，谢谢 🙏</p></blockquote><h3 id="观察链接"><a href="#观察链接" class="headerlink" title="观察链接"></a>观察链接</h3><blockquote><p><a href="https://movie.douban.com/explore#!type=movie&amp;tag=%E5%86%B7%E9%97%A8%E4%BD%B3%E7%89%87&amp;sort=recommend&amp;page_limit=20&amp;page_start=0" target="_blank" rel="noopener">https://movie.douban.com/explore#!type=movie&amp;tag=%E5%86%B7%E9%97%A8%E4%BD%B3%E7%89%87&amp;sort=recommend&amp;page_limit=20&amp;page_start=0</a></p></blockquote><h3 id="创建爬虫"><a href="#创建爬虫" class="headerlink" title="创建爬虫"></a>创建爬虫</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 创建项目</span><br><span class="line"><span class="meta">$</span> scrapy startproject douban</span><br><span class="line"><span class="meta">#</span> 创建爬虫</span><br><span class="line"><span class="meta">$</span> scrapy genspider doubanSpider https://www.douban.com/</span><br></pre></td></tr></table></figure><h4 id="doubanSpider-py"><a href="#doubanSpider-py" class="headerlink" title="doubanSpider.py"></a>doubanSpider.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> douban.items <span class="keyword">import</span> DoubanItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanspiderSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'doubanSpider'</span></span><br><span class="line">    allowed_domains = [<span class="string">'https://movie.douban.com/'</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"https://movie.douban.com/j/search_subjects?type=movie&amp;tag=%E5%86%B7%E9%97%A8%E4%BD%B3%E7%89%87&amp;sort=recommend&amp;page_limit=20&amp;page_start="</span></span><br><span class="line">        + str(x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>, <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        rs = json.loads(response.text)</span><br><span class="line">        datas = rs.get(<span class="string">"subjects"</span>)</span><br><span class="line">        item = DoubanItem()</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">            item[<span class="string">'title'</span>] = data.get(<span class="string">'title'</span>)</span><br><span class="line">            item[<span class="string">'rate'</span>] = data.get(<span class="string">'rate'</span>)</span><br><span class="line">            item[<span class="string">'url'</span>] = data.get(<span class="string">'url'</span>)</span><br><span class="line">            item[<span class="string">'id'</span>] = data.get(<span class="string">'id'</span>)</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h4 id="items-py"><a href="#items-py" class="headerlink" title="items.py"></a>items.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    rate = scrapy.Field()</span><br><span class="line">    url = scrapy.Field()</span><br><span class="line">    id = scrapy.Field()</span><br><span class="line">    cover = scrapy.Field()</span><br></pre></td></tr></table></figure><h4 id="pipelines-py"><a href="#pipelines-py" class="headerlink" title="pipelines.py"></a>pipelines.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanPipeline</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'text.txt'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(item[<span class="string">'id'</span>] +<span class="string">","</span>+item[<span class="string">'rate'</span>]+<span class="string">","</span>+item[<span class="string">'title'</span>]+<span class="string">","</span>+item[<span class="string">'url'</span>] + <span class="string">"\n"</span>)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><h4 id="特别注意-setting-py-文件"><a href="#特别注意-setting-py-文件" class="headerlink" title="特别注意 setting.py 文件"></a>特别注意 setting.py 文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line"><span class="comment"># USER_AGENT 需要，不开启会一直 403 拒绝访问</span></span><br><span class="line">USER_AGENT = <span class="string">'douban (+http://www.yourdomain.com)'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line"><span class="comment"># 忽略 robots.txt 文件</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 做一个有道德的人 设置一下下载延迟</span></span><br><span class="line">DOWNLOAD_DELAY = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="comment"># ITEM_PIPELINES 记得开启一下</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'douban.pipelines.DoubanPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行爬虫"><a href="#运行爬虫" class="headerlink" title="运行爬虫"></a>运行爬虫</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> scrapy crawl doubanSpider</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/113243/1590079232312-85b645ae-306b-48fd-9e31-9306aa83e8d0.png#align=left&amp;display=inline&amp;height=473&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=946&amp;originWidth=2362&amp;size=352775&amp;status=done&amp;style=none&amp;width=1181" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy 初窥</title>
      <link href="/2020/05/17/yuque/Scrapy%20%E5%88%9D%E7%AA%A5/"/>
      <url>/2020/05/17/yuque/Scrapy%20%E5%88%9D%E7%AA%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 创建新的工程</span><br><span class="line">scrapy startproject [name]</span><br><span class="line"><span class="meta">#</span> 创建一个爬虫</span><br><span class="line">scrapy genspider [name] [domain]</span><br><span class="line">scrapy settings</span><br><span class="line"><span class="meta">#</span> 运行一个爬虫</span><br><span class="line">scrapy crawl [spider]</span><br><span class="line">scrapy list</span><br><span class="line"><span class="meta">#</span> 启用url调试命令行</span><br><span class="line">scrapy shell [url]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/113243/1589684474404-8f737713-8f2e-4031-9663-c9f5c55d0e6d.png#align=left&amp;display=inline&amp;height=283&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=566&amp;originWidth=1746&amp;size=669192&amp;status=done&amp;style=none&amp;width=873" alt="image.png"></p><h3 id="Scrapyd"><a href="#Scrapyd" class="headerlink" title="Scrapyd"></a>Scrapyd</h3><p><a href="https://piaosanlang.gitbooks.io/spiders/05day/section5.3.html" target="_blank" rel="noopener">https://piaosanlang.gitbooks.io/spiders/05day/section5.3.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>视频资料</title>
      <link href="/2020/05/12/yuque/%E8%A7%86%E9%A2%91%E8%B5%84%E6%96%99/"/>
      <url>/2020/05/12/yuque/%E8%A7%86%E9%A2%91%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<p>01、Java av47103781<br>02、Spring av47103781<br>03、Spring Mvc av47176832<br>04、MyBatis av47228830<br>05、Hibernate av47382482<br>06、Spring Boot av47230137<br>07、Spring Cloud av47228830<br>08、Dubbo av47009143<br>09、MySQL av47702905<br>10、Redis av47423174<br>11、MongoDB av47425352<br>12、Elasticsearch av48279989<br>13、Zookeeper av47773419<br>14、Kafka av47773990<br>15、Linux av47702283<br>16、Docker av47715282<br>17、Maven av47382482<br>18、Git av47701443<br>19、Jenkins av47714706<br>20、IDEA av47382482<br>21、Shiro av47382482<br>22、React av48033695<br>23、Vue av50886891<br>24、电商项目实战 av48308453<br>25、RBAC 权限系统 av48305719<br>26、数据结构与算法 av48505556<br>27、Oracle av48502473<br>28、ActiveMQ av48562474<br>29、TCP/IP av48562426<br>30、HTTP av48561455<br>31、Netty av48570202<br>32、Gradle av48581119<br>33、HBase av48581792<br>34、Kubernetes av48582456<br>35、Hive av48609427<br>36、Hadoop av48621769<br>37、Spark av48668079<br>38、Python av48324668<br>39、Python 项目实战 av48921588<br>40、人工智能 av49122347<br>41、HTML + CSS av49126649<br>42、Javascript av48927313<br>43、微信小程序 av48324778<br>44、React 项目实战 av48495066<br>45、Vue 项目实战 av48333477<br>尚硅谷 spring 注解版</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue 循环map</title>
      <link href="/2020/05/06/yuque/vue%20%E5%BE%AA%E7%8E%AFmap/"/>
      <url>/2020/05/06/yuque/vue%20%E5%BE%AA%E7%8E%AFmap/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-collapse&gt;</span><br><span class="line">            &lt;el-collapse-item v-<span class="keyword">for</span>=<span class="string">"(val, key) in forbiddenFieldData"</span> :key=<span class="string">"val.id"</span>&gt;</span><br><span class="line">              &lt;template slot=<span class="string">"title"</span>&gt;</span><br><span class="line">                &lt;el-checkbox&gt;</span><br><span class="line">                  &#123;&#123; key &#125;&#125;</span><br><span class="line">                &lt;<span class="regexp">/el-checkbox&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>template&gt;</span><br><span class="line">              &lt;el-row&gt;</span><br><span class="line">                &lt;el-col v-<span class="keyword">for</span>=<span class="string">"(option) in val"</span> :key=<span class="string">"option.id"</span> :span=<span class="string">"8"</span>&gt;</span><br><span class="line">                  &lt;el-checkbox &gt;</span><br><span class="line">                    &#123;&#123; option.name &#125;&#125;</span><br><span class="line">                  &lt;<span class="regexp">/el-checkbox&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>el-col&gt;</span><br><span class="line">              &lt;<span class="regexp">/el-row&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>el-collapse-item&gt;</span><br><span class="line">          &lt;<span class="regexp">/el-collapse&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树</title>
      <link href="/2020/05/06/yuque/%E6%A0%91/"/>
      <url>/2020/05/06/yuque/%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/youyouxiaosheng-lh/p/11052045.html" target="_blank" rel="noopener">https://www.cnblogs.com/youyouxiaosheng-lh/p/11052045.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows 小插件</title>
      <link href="/2020/03/25/yuque/Windows%20%E5%B0%8F%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/03/25/yuque/Windows%20%E5%B0%8F%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>工欲善其事必先利其器</p></blockquote><h3 id="Everything-Wox"><a href="#Everything-Wox" class="headerlink" title="Everything + Wox"></a>Everything + Wox</h3><h3 id="油猴插件-IDM"><a href="#油猴插件-IDM" class="headerlink" title="油猴插件 + IDM"></a>油猴插件 + IDM</h3><p>Tampermonkey</p><h3 id="解压-7z"><a href="#解压-7z" class="headerlink" title="解压 7z"></a>解压 7z</h3><h3 id="PDF-福昕"><a href="#PDF-福昕" class="headerlink" title="PDF 福昕"></a>PDF 福昕</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 目录结构</title>
      <link href="/2020/03/18/yuque/Linux%20%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
      <url>/2020/03/18/yuque/Linux%20%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2020/png/113243/1584501700984-a5dd1cac-a29c-4603-94a7-64ba3087c562.png#align=left&amp;display=inline&amp;height=553&amp;name=L%7DYP%291OV9T%28ICCO4%7D140M%258.png&amp;originHeight=553&amp;originWidth=1055&amp;size=236107&amp;status=done&amp;style=none&amp;width=1055" alt="L}YP)1OV9T(ICCO4}140M%8.png"></p><p><a href="https://www.runoob.com/linux/linux-system-contents.html" target="_blank" rel="noopener">https://www.runoob.com/linux/linux-system-contents.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx 基础配置</title>
      <link href="/2020/02/18/yuque/nginx%20%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/02/18/yuque/nginx%20%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       9001;</span><br><span class="line">      server_name  192.168.88.128;</span><br><span class="line"></span><br><span class="line">      location ~ /edu/ &#123;</span><br><span class="line">          proxy_pass http://127.0.0.1:8080;</span><br><span class="line">      &#125;</span><br><span class="line">      location ~ /vod/ &#123;</span><br><span class="line">          proxy_pass http://127.0.0.1:8081;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream myserver &#123;</span><br><span class="line">server 192.168.17.129:8080;</span><br><span class="line">  server 192.168.17.129:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  192.168.88.128;</span><br><span class="line"></span><br><span class="line">       #charset koi8-r;</span><br><span class="line"></span><br><span class="line">       #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">       location / &#123;</span><br><span class="line">           proxy_pass http://myserver;</span><br><span class="line">           root   html;</span><br><span class="line">           index  index.html index.htm;</span><br><span class="line">       &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离**"></a>动静分离**</h4><p>**<br>autoindex on; 会列出所有文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location /www/ &#123;</span><br><span class="line">  root /data/;</span><br><span class="line">  index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /image/ &#123;</span><br><span class="line">  root /data/;</span><br><span class="line">  autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zsh shell 环境配置不生效</title>
      <link href="/2020/01/26/yuque/zsh%20shell%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8D%E7%94%9F%E6%95%88/"/>
      <url>/2020/01/26/yuque/zsh%20shell%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8D%E7%94%9F%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p>在终端输入<code>vim ~/.zshrc</code><br>加一句  <code>source ~/.bash_profile</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ruby 环境搭建</title>
      <link href="/2019/12/06/yuque/ruby%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/12/06/yuque/ruby%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> curl -sSL https://rvm.io/mpapis.asc | gpg --import -</span><br><span class="line"><span class="meta">$</span> curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -</span><br><span class="line"><span class="meta">$</span> curl -L https://get.rvm.io | bash -s stable</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1575618459340-9bfd13f7-fe27-4799-b738-69f026a167be.png#align=left&amp;display=inline&amp;height=412&amp;name=image.png&amp;originHeight=824&amp;originWidth=1444&amp;size=215915&amp;status=done&amp;style=none&amp;width=722" alt="image.png"></p><p>会有提示你的 RVM 安装目录，我的目录是：  /usr/local/rvm/</p><p>下面还会提示你 ： source /etc/profile.d/rvm.sh<br>更新一下你的配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> rvm requirements</span><br><span class="line"><span class="meta">$</span> rvm install 2.6.0</span><br><span class="line"><span class="meta">$</span> gem install bundler</span><br><span class="line"><span class="meta">$</span> gem install rails</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>工具</title>
      <link href="/2019/11/30/yuque/%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/11/30/yuque/%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="自带工具"><a href="#自带工具" class="headerlink" title="自带工具"></a>自带工具</h3><p><strong>聚焦搜索 spotright （快捷键：command+空格）</strong><br><strong>Air Drop 隔空投送（需要开启蓝牙）</strong><br><strong>锁屏快捷键</strong> control + shift + 电源键<br>**</p><h3 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h3><p>文本工具： Typora（Markdown 语法）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>interface default method/static method</title>
      <link href="/2019/11/12/yuque/interface%20default%20method!static%20method/"/>
      <url>/2019/11/12/yuque/interface%20default%20method!static%20method/</url>
      
        <content type="html"><![CDATA[<p>default 可以实现可以不实现，向前兼容性</p><p>1.8 的改动比较大，stream 的引入让所有接口都需要实现 stream 改动是比较大的所以引入了 default 方法。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kafka 核心场景</title>
      <link href="/2019/10/31/yuque/Kafka%20%E6%A0%B8%E5%BF%83%E5%9C%BA%E6%99%AF/"/>
      <url>/2019/10/31/yuque/Kafka%20%E6%A0%B8%E5%BF%83%E5%9C%BA%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="解耦"><a href="#解耦" class="headerlink" title="解耦"></a>解耦</h3><p>直接接口调用发送，一对多的场景非常的不方便。<br>接口调用的耦合性比较高，假设 A 调用 B ，A 需要考虑如果 B 挂了怎么办？<br>如果是 MQ ，A 就不用担心这个问题，A 发了到 MQ 中，B 需要了去取，A 中根本不需要考虑发给谁，也不需要考虑是否调用接口是否成功。</p><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>MQ 异步发请求，用户无感知。</p><h3 id="削峰"><a href="#削峰" class="headerlink" title="削峰"></a>削峰</h3><p>一般的 MySQL，扛到每秒 2K 个请求就差不多了，如果每秒请求到 5k 的话，可能就直接把 MySQL 给打死了，导致系统崩溃，用户也就没法再使用系统了。<br>但是高峰期一过，低峰期用户的请求就没这么多了。<br>消息放到 MQ 中业务端每秒拉取 2K 个请求，解析插入数据库，对整个系统几乎没有任何压力。</p><h3 id="Kafka、ActiveMQ、RabbitMQ、RocketMQ-有什么优缺点？"><a href="#Kafka、ActiveMQ、RabbitMQ、RocketMQ-有什么优缺点？" class="headerlink" title="Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？"></a>Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？</h3><table><thead><tr><th>特性</th><th>ActiveMQ</th><th>RabbitMQ</th><th>RocketMQ</th><th>Kafka</th></tr></thead><tbody><tr><td>单机吞吐量</td><td>万级，比 RocketMQ、Kafka 低一个数量级</td><td>同 ActiveMQ</td><td>10 万级，支撑高吞吐</td><td>10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景</td></tr><tr><td>topic 数量对吞吐量的影响</td><td></td><td></td><td>topic 可以达到几百/几千的级别，吞吐量会有较小幅度的下降，这是 RocketMQ 的一大优势，在同等机器下，可以支撑大量的 topic</td><td>topic 从几十到几百个时候，吞吐量会大幅度下降，在同等机器下，Kafka 尽量保证 topic 数量不要过多，如果要支撑大规模的 topic，需要增加更多的机器资源</td></tr><tr><td>时效性</td><td>ms 级</td><td>微秒级，这是 RabbitMQ 的一大特点，延迟最低</td><td>ms 级</td><td>延迟在 ms 级以内</td></tr><tr><td>可用性</td><td>高，基于主从架构实现高可用</td><td>同 ActiveMQ</td><td>非常高，分布式架构</td><td>非常高，分布式，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用</td></tr><tr><td>消息可靠性</td><td>有较低的概率丢失数据</td><td>基本不丢</td><td>经过参数优化配置，可以做到 0 丢失</td><td>同 RocketMQ</td></tr><tr><td>功能支持</td><td>MQ 领域的功能极其完备</td><td>基于 erlang 开发，并发能力很强，性能极好，延时很低</td><td>MQ 功能较为完善，还是分布式的，扩展性好</td><td>功能较为简单，主要支持简单的 MQ 功能，在大数据领域的实时计算以及日志采集被大规模使用</td></tr></tbody></table><p>###</p><h3 id="Kerry-场景"><a href="#Kerry-场景" class="headerlink" title="Kerry 场景"></a>Kerry 场景</h3><p>外部模块处理请求，简单解析之后写日志再放入 Kafka。<br>业务模块从 Kafka 批量拉取数据，批量入库操作。</p><p>有个高并发入库的场景，客户要求库存快速入库，Kafka 拉取后即事件发布，事件监听到之后将消息解析放入队列，当队列大于等于 1000 条进行批量入库操作。实测效率非常高，30w 条写库操作大概 6 分钟左右。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kerry</title>
      <link href="/2019/10/30/yuque/Kerry/"/>
      <url>/2019/10/30/yuque/Kerry/</url>
      
        <content type="html"><![CDATA[<h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul><li>请求内容</li><li>请求时间</li><li>响应内容</li><li>响应时间</li><li>message</li></ul><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><p>定时任务可以加上 open 字段来控制是否执行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">task:</span><br><span class="line">    callbackCorn: 0 0/5 * * * ?</span><br><span class="line">    sapStockCallback: 0 5 0,6,12,18 * * ?</span><br><span class="line">    transactionCallback: 0 0 21 * * ?</span><br><span class="line">    open: false</span><br></pre></td></tr></table></figure><h4 id="常用定时"><a href="#常用定时" class="headerlink" title="常用定时"></a>常用定时</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 凌晨</span><br><span class="line">0 0 0 * * ?</span><br><span class="line"># 2点</span><br><span class="line">0 0 2 * * ?</span><br><span class="line"># 每五分钟</span><br><span class="line">0 0/5 * * * ?</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows 杀进程</title>
      <link href="/2019/10/16/yuque/windows%20%E6%9D%80%E8%BF%9B%E7%A8%8B/"/>
      <url>/2019/10/16/yuque/windows%20%E6%9D%80%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano |findstr "8001"</span><br><span class="line">taskkill /f /pid 13236</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 安装</title>
      <link href="/2019/09/30/yuque/Docker%20%E5%AE%89%E8%A3%85/"/>
      <url>/2019/09/30/yuque/Docker%20%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p>启动 docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>修改或新增 /etc/docker/daemon.json</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"http://hub-mirror.c.163.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> systemctl restart docker.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git open /dev/null</title>
      <link href="/2019/09/27/yuque/git%20open%20!dev!null/"/>
      <url>/2019/09/27/yuque/git%20open%20!dev!null/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/ricklz/p/9216395.html" target="_blank" rel="noopener">https://www.cnblogs.com/ricklz/p/9216395.html</a></p><p>cmd 启动 null<br>sc start null</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kafka 集群</title>
      <link href="/2019/09/18/yuque/Kafka%20%E9%9B%86%E7%BE%A4/"/>
      <url>/2019/09/18/yuque/Kafka%20%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 192.168.2.128</span><br><span class="line">Kafka</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 192.168.2.129</span><br><span class="line">Kafka</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 192.168.2.130</span><br><span class="line">Redis</span><br><span class="line">Zookeeper</span><br><span class="line">Kafka</span><br></pre></td></tr></table></figure><h4 id="配置源"><a href="#配置源" class="headerlink" title="配置源"></a>配置源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></figure><h4 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>配置不用 sudo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><ul><li>安装 Zookeeper 和 Kafka</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker pull wurstmeister/zookeeper</span><br><span class="line"><span class="meta">$</span> docker pull wurstmeister/kafka</span><br></pre></td></tr></table></figure><h4 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper**"></a>Zookeeper**</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d --name zookeeper -p 2181:2181 -t wurstmeister/zookeeper</span><br></pre></td></tr></table></figure><h4 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka**"></a>Kafka**</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d --name kafka -p 9092:9092 \</span><br><span class="line">-e KAFKA_BROKER_ID=0 \</span><br><span class="line">-e KAFKA_ZOOKEEPER_CONNECT=192.168.2.130:2181 \</span><br><span class="line">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.2.130:9092 \</span><br><span class="line">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 988f4a6ca13c(镜像ID)</span><br></pre></td></tr></table></figure><p>其他两台 <strong>Kafka </strong>也连接到 130 的 <strong>Zookeeper</strong></p><p>kafka01  128</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d --name kafka01 -p 9092:9092 \</span><br><span class="line">-e KAFKA_BROKER_ID=1 \</span><br><span class="line">-e KAFKA_ZOOKEEPER_CONNECT=192.168.2.130:2181 \</span><br><span class="line">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.2.128:9092 \</span><br><span class="line">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 988f4a6ca13c</span><br></pre></td></tr></table></figure><p>kafka02 129</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d --name kafka02 -p 9092:9092 \</span><br><span class="line">-e KAFKA_BROKER_ID=2 \</span><br><span class="line">-e KAFKA_ZOOKEEPER_CONNECT=192.168.2.130:2181 \</span><br><span class="line">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.2.129:9092 \</span><br><span class="line">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 988f4a6ca13c</span><br></pre></td></tr></table></figure><h4 id="查看-Zookeeper-状态"><a href="#查看-Zookeeper-状态" class="headerlink" title="查看 Zookeeper 状态"></a>查看 Zookeeper 状态</h4><ul><li>进入容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker exec -it bb189e36e49a /bin/bash</span><br></pre></td></tr></table></figure><ul><li>查看 ids</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 3] ls /brokers/ids</span><br><span class="line">[2, 1, 0]</span><br></pre></td></tr></table></figure><p>这边的这个 <strong>id </strong>就是我们刚才设置的 <strong>KAFKA_BROKER_ID</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bash 脚本模板</title>
      <link href="/2019/09/18/yuque/bash%20%E8%84%9A%E6%9C%AC%E6%A8%A1%E6%9D%BF/"/>
      <url>/2019/09/18/yuque/bash%20%E8%84%9A%E6%9C%AC%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">"start")&#123;</span><br><span class="line">for i in xx xx xx</span><br><span class="line">  do</span><br><span class="line">  echo "********** $1 start ***********"</span><br><span class="line">      ssh $i "xxx xxx xxx"</span><br><span class="line">  done</span><br><span class="line">&#125;;;</span><br><span class="line">"stop")&#123;</span><br><span class="line">for i in xx xx xx</span><br><span class="line">  do</span><br><span class="line">  echo "********** $1 stop ***********"</span><br><span class="line">      ssh $i "xxx xxx xxx"</span><br><span class="line">  done</span><br><span class="line">&#125;;;</span><br><span class="line"></span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 进制转化</title>
      <link href="/2019/08/13/yuque/Java%20%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96/"/>
      <url>/2019/08/13/yuque/Java%20%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>十进制转成十六进制：<br>Integer.toHexString(int i)</p><p>十进制转成八进制<br>Integer.toOctalString(int i)</p><p>十进制转成二进制<br>Integer.toBinaryString(int i)</p><p>十六进制转成十进制<br>Integer.valueOf(“FFFF”,16).toString()</p><p>八进制转成十进制<br>Integer.valueOf(“876”,8).toString()</p><p>二进制转十进制<br>Integer.valueOf(“0101”,2).toString()</p><p>有什么方法可以直接将 2,8,16 进制直接转换为 10 进制的吗?<br>java.lang.Integer 类<br>parseInt(String s, int radix)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>位运算</title>
      <link href="/2019/08/12/yuque/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
      <url>/2019/08/12/yuque/%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>0s 表示一串 0，1s 表示一串 1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x ^ 0s = x      x &amp; 0s = 0      x | 0s = x</span><br><span class="line">x ^ 1s = ~x     x &amp; 1s = x      x | 1s = 1s</span><br><span class="line">x ^ x = 0       x &amp; x = x       x | x = x</span><br></pre></td></tr></table></figure><ul><li>利用 x ^ 1s = ~x 的特点，可以将位级表示翻转；利用 x ^ x = 0 的特点，可以将三个数中重复的两个数去除，只留下另一个数。</li><li>利用 x &amp; 0s = 0 和 x &amp; 1s = x 的特点，可以实现掩码操作。一个数 num 与 mask：00111100 进行位与操作，只保留 num 中与 mask 的 1 部分相对应的位。</li><li>利用 x | 0s = x 和 x | 1s = 1s 的特点，可以实现设值操作。一个数 num 与 mask：00111100 进行位或操作，将 num 中与 mask 的 1 部分相对应的位都设置为 1。</li></ul><p><strong>位与运算技巧：</strong></p><ul><li>n&amp;(n-1) 去除 n 的位级表示中最低的那一位。例如对于二进制表示 10110100，减去 1 得到 10110011，这两个数相与得到 10110000。</li><li>n&amp;(-n) 得到 n 的位级表示中最低的那一位。-n 得到 n 的反码加 1，对于二进制表示 10110100，-n 得到 01001100，相与得到 00000100。</li><li>n-n&amp;(~n+1) 去除 n 的位级表示中最高的那一位。</li></ul><p><strong>移位运算：</strong></p><ul><li><blockquote><blockquote><p>n 为算术右移，相当于除以 2；</p></blockquote></blockquote></li><li><blockquote><blockquote><blockquote><p>n 为无符号右移，左边会补上 0。</p></blockquote></blockquote></blockquote></li><li>&lt;&lt; n 为算术左移，相当于乘以 2。</li></ul><p><strong>mask 计算</strong><br>要获取 111111111，将 0 取反即可，~0。<br>要得到只有第 i 位为 1 的 mask，将 1 向左移动 i-1 位即可，1&lt;&lt;(i-1) 。例如 1&lt;&lt;4 得到只有第 5 位为 1 的 mask ：00010000。<br>要得到 1 到 i 位为 1 的 mask，1&lt;&lt;(i+1)-1 即可，例如将 1&lt;&lt;(4+1)-1 = 00010000-1 = 00001111。<br>要得到 1 到 i 位为 0 的 mask，只需将 1 到 i 位为 1 的 mask 取反，即 ~(1&lt;&lt;(i+1)-1)。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 资源管理</title>
      <link href="/2019/08/07/yuque/Linux%20%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/"/>
      <url>/2019/08/07/yuque/Linux%20%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>内存占用最高的 10 个进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux|sort -k4r|head -10</span><br></pre></td></tr></table></figure><p>查看 Java 进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep java</span><br></pre></td></tr></table></figure><p>监控 Linux 的系统状况，比如 cpu、内存的使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/113243/1565144285340-03802152-e8b8-44c6-b726-9aba998e6411.jpeg#align=left&amp;display=inline&amp;height=370&amp;originHeight=370&amp;originWidth=585&amp;size=0&amp;status=done&amp;width=585" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## 第一行</span><br><span class="line">10:01:23 — 当前系统时间</span><br><span class="line">126 days, 14:29 — 系统已经运行了126天14小时29分钟（在这期间没有重启过）</span><br><span class="line">2 users — 当前有2个用户登录系统</span><br><span class="line">load average: 1.15, 1.42, 1.44 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。</span><br><span class="line"></span><br><span class="line">load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。</span><br><span class="line">如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 第二行</span><br><span class="line">Tasks — 任务（进程），系统现在共有183个进程，其中处于运行中的有1个，</span><br><span class="line">182个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## 第三行</span><br><span class="line">6.7% us — 用户空间占用CPU的百分比。</span><br><span class="line">0.4% sy — 内核空间占用CPU的百分比。</span><br><span class="line">0.0% ni — 改变过优先级的进程占用CPU的百分比</span><br><span class="line">92.9% id — 空闲CPU百分比</span><br><span class="line">0.0% wa — IO等待占用CPU的百分比</span><br><span class="line">0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比</span><br><span class="line">0.0% si — 软中断（Software Interrupts）占用CPU的百分比</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## 内存状态</span><br><span class="line">8306544k total — 物理内存总量（8GB）</span><br><span class="line">7775876k used — 使用中的内存总量（7.7GB）</span><br><span class="line">530668k free — 空闲内存总量（530M）</span><br><span class="line">79236k buffers — 缓存的内存量 （79M）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">## 第七行以下：各进程（任务）的状态监控</span><br><span class="line">PID — 进程id</span><br><span class="line">USER — 进程所有者</span><br><span class="line">PR — 进程优先级</span><br><span class="line">NI — nice值。负值表示高优先级，正值表示低优先级</span><br><span class="line">VIRT — 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</span><br><span class="line">RES — 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</span><br><span class="line">SHR — 共享内存大小，单位kb</span><br><span class="line">S — 进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</span><br><span class="line">%CPU — 上次更新到现在的CPU时间占用百分比</span><br><span class="line">%MEM — 进程使用的物理内存百分比</span><br><span class="line">TIME+ — 进程使用的CPU时间总计，单位1/100秒</span><br><span class="line">COMMAND — 进程名称（命令名/命令行）</span><br></pre></td></tr></table></figure><p>参考连接：<a href="https://www.liangzl.com/get-article-detail-6009.html" target="_blank" rel="noopener">https://www.liangzl.com/get-article-detail-6009.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 下 node cnpm 无法使用</title>
      <link href="/2019/08/05/yuque/Linux%20%E4%B8%8B%20node%20cnpm%20%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/08/05/yuque/Linux%20%E4%B8%8B%20node%20cnpm%20%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>Linux 下的命令需要设置软连接<br>npm 下载好的包软连接再你的 node/bin 目录下，我的目录是  /usr/local/node/bin</p><h3 id="node"><a href="#node" class="headerlink" title="node"></a>node</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/node/bin/node /usr/bin/node &amp;</span><br><span class="line">ln -s /usr/local/node/bin/npm /usr/bin/npm</span><br></pre></td></tr></table></figure><h3 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/node/bin/cnpm /usr/bin/cnpm</span><br></pre></td></tr></table></figure><h3 id="docsify"><a href="#docsify" class="headerlink" title="docsify"></a>docsify</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/node/bin/docsify /usr/bin/docsify</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ApplicationContextAware</title>
      <link href="/2019/08/05/yuque/ApplicationContextAware/"/>
      <url>/2019/08/05/yuque/ApplicationContextAware/</url>
      
        <content type="html"><![CDATA[<p>遇到的问题：mqtt 回调 callback 方法时，Mapper 注入不成功。<br>解决方式：手动获取 spring 容器管理的 bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringUtils</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (SpringUtils.applicationContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">            SpringUtils.applicationContext = applicationContext;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取applicationContext</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过name获取 Bean.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过class获取Bean.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过name,以及Clazz返回指定的Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(String name, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name, clazz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再回调中调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SpringUtils.getBean(xxxxMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker Nginx 简单使用</title>
      <link href="/2019/08/02/yuque/Docker%20Nginx%20%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/08/02/yuque/Docker%20Nginx%20%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="配置容器"><a href="#配置容器" class="headerlink" title="配置容器"></a>配置容器</h3><p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker pull nginx</span><br></pre></td></tr></table></figure><p>运行容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run --name nginx-test -p 8081:80 -d nginx</span><br></pre></td></tr></table></figure><p>在浏览器中打开  <a href="http://127.0.0.1:8081/" target="_blank" rel="noopener">http://127.0.0.1:8081/</a> 可以看到 Welcome to nginx!</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>创建 nginx 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir -p ~/nginx/www ~/nginx/logs ~/nginx/conf</span><br></pre></td></tr></table></figure><p>拷贝容器目录到本地<br>daa0e05de9f8 : 容器 ID</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker cp daa0e05de9f8:/etc/nginx/nginx.conf ~/nginx/conf</span><br></pre></td></tr></table></figure><ul><li><strong>www</strong>: 目录将映射为 nginx 容器配置的虚拟目录。</li><li><strong>logs</strong>: 目录将映射为 nginx 容器的日志目录。</li><li><strong>conf</strong>: 目录里的配置文件将映射为 nginx 容器的配置文件。</li></ul><p>运行第二个容器，映射到 8082 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d -p 8082:80 --name nginx-test-web \</span><br><span class="line">-v ~/nginx/www:/usr/share/nginx/html \</span><br><span class="line">-v ~/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">-v ~/nginx/logs:/var/log/nginx nginx</span><br></pre></td></tr></table></figure><ul><li><p><strong>-v ~/nginx/www:/usr/share/nginx/html：</strong>将我们自己创建的 www 目录挂载到容器的 /usr/share/nginx/html。</p></li><li><p><strong>-v ~/nginx/conf/nginx.conf:/etc/nginx/nginx.conf：</strong>将我们自己创建的 nginx.conf 挂载到容器的 /etc/nginx/nginx.conf。</p></li><li><p><strong>-v ~/nginx/logs:/var/log/nginx：</strong>将我们自己创建的 logs 挂载到容器的 /var/log/nginx。</p></li></ul><p>进入 ~/nginx/www 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd ~/nginx/www</span><br></pre></td></tr></table></figure><p>创建 index.html 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在浏览器中打开  <a href="http://127.0.0.1:8082/" target="_blank" rel="noopener">http://127.0.0.1:8082/</a> 可以看到我们刚才编辑的 html 了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 搭建 RabbitMQ</title>
      <link href="/2019/08/01/yuque/Docker%20%E6%90%AD%E5%BB%BA%20RabbitMQ/"/>
      <url>/2019/08/01/yuque/Docker%20%E6%90%AD%E5%BB%BA%20RabbitMQ/</url>
      
        <content type="html"><![CDATA[<p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull rabbitmq:3.7.17-management</span><br></pre></td></tr></table></figure><p>启动镜像<br>**</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name rabbitmq3.7.17 -p 5672:5672 -p 15672:15672 -v `pwd`/data:/var/lib/rabbitmq --hostname \</span><br><span class="line"> myRabbit -e RABBITMQ_DEFAULT_VHOST=my_vhost \</span><br><span class="line"> -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin 1d0a5c8a8d4e</span><br></pre></td></tr></table></figure><p><strong>1d0a5c8a8d4e 是自己的镜像 ID</strong><br>**<br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564643090820-ce16b9fa-0b54-4c8e-b27c-d85926db109d.png#align=left&amp;display=inline&amp;height=247&amp;name=image.png&amp;originHeight=247&amp;originWidth=718&amp;size=41789&amp;status=done&amp;width=718" alt="image.png"></p><p>说明：<br>-d 后台运行容器；<br>–name 指定容器名；<br>-p  指定服务运行的端口（5672：应用访问端口；15672：控制台 Web 端口号）；<br>-v 映射目录或文件；<br>–hostname   主机名（RabbitMQ 的一个重要注意事项是它根据所谓的 “节点名称” 存储数据，默认为主机名）；<br>-e 指定环境变量；（RABBITMQ_DEFAULT_VHOST：默认虚拟机名；RABBITMQ_DEFAULT_USER：默认的用户名；RABBITMQ_DEFAULT_PASS：默认用户名的密码）</p><p>访问：<a href="http://Server-IP:15672" target="_blank" rel="noopener">http://Server-IP:15672</a> 即可看到自己的 rabbitmq 管理后台</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis 在 SpringBoot 中简单应用</title>
      <link href="/2019/08/01/yuque/Redis%20%E5%9C%A8%20SpringBoot%20%E4%B8%AD%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
      <url>/2019/08/01/yuque/Redis%20%E5%9C%A8%20SpringBoot%20%E4%B8%AD%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>打开 IDEA 创建一个 Spring Boot 项目，不会的同学参考：<a href="https://www.cnblogs.com/black-spike/p/8017768.html" target="_blank" rel="noopener">https://www.cnblogs.com/black-spike/p/8017768.html</a></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>在 yml 文件中，配置我们的 Redis 路径，不会的同学可以参考我之前写的 <a href="https://www.yuque.com/glacier/github.io/gkzd5g" target="_blank" rel="noopener">docker 搭建 Redis </a><br>创建对应的文件夹<br>controller - 控制器<br>domain - 实体类<br>service - 业务层<br>util - 工具类</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564640056418-0199b814-55e6-4da7-a42a-f97d10acf2b3.png#align=left&amp;display=inline&amp;height=517&amp;name=image.png&amp;originHeight=517&amp;originWidth=666&amp;size=48289&amp;status=done&amp;width=666" alt="image.png"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p><strong>RedisController 控制器</strong><br>定义了 3 个方法，getUsers 获取用户列表，create 创建用户，del 删除用户。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fxk.test.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fxk.test.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/redis"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/users"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(userService.getUsers());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(userService.create());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/del"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">del</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span>String id) </span>&#123;</span><br><span class="line">        userService.del(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>User 实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fxk.test.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String salt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>UserService 业务层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fxk.test.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.fxk.test.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.fxk.test.util.UUIDBase64Util;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; keys = <span class="keyword">this</span>.redisTemplate.keys(<span class="string">"user:*"</span>);</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            <span class="comment">// json 转对象从 Redis 取出</span></span><br><span class="line">            userList.add(JSONObject.parseObject(<span class="keyword">this</span>.redisTemplate.opsForValue().get(key), User<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String id = UUIDBase64Util.generate();</span><br><span class="line">        User user = <span class="keyword">new</span> User(id, <span class="string">"fxk"</span>, <span class="string">"fxk"</span>, <span class="string">"123456"</span>, <span class="string">"123123"</span>);</span><br><span class="line">        <span class="comment">// 对象转 json 存入 Redis</span></span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">"user:"</span> + id, JSONObject.toJSONString(user));</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.delete(<span class="string">"user:"</span> + id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisTemplate</span><span class="params">(StringRedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>util 中两个方法：<br>RedisUtil 有的小伙伴喜欢用 RedisUtil，但是 RedisUtil 不会配置，下面我会讲到。<br>UUIDBase64Util 生成随机 id 的方法</p><p><strong>UUIDBase64Util</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fxk.test.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sun.misc.BASE64Encoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UUIDBase64Util</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UUID uuid = UUID.randomUUID();</span><br><span class="line">        <span class="keyword">byte</span>[] uuidArr = asByteArray(uuid);</span><br><span class="line">        String s = <span class="keyword">new</span> BASE64Encoder().encode(uuidArr);</span><br><span class="line">        <span class="keyword">return</span> s.replace(<span class="string">"="</span>, <span class="string">""</span>).replace(<span class="string">"/"</span>, <span class="string">"_"</span>).replace(<span class="string">"+"</span>, <span class="string">"-"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] asByteArray(UUID uuid) &#123;</span><br><span class="line">        <span class="keyword">long</span> msb = uuid.getMostSignificantBits();</span><br><span class="line">        <span class="keyword">long</span> lsb = uuid.getLeastSignificantBits();</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">16</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            buffer[i] = (<span class="keyword">byte</span>) (msb &gt;&gt;&gt; <span class="number">8</span> * (<span class="number">7</span> - i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">8</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">            buffer[i] = (<span class="keyword">byte</span>) (lsb &gt;&gt;&gt; <span class="number">8</span> * (<span class="number">7</span> - i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> buffer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>RedisUtil</strong><br>主要是把 RedisUtil 当作 Resource 注入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 具体方法 网上一搜一大堆 ... 这里主要讲下配置 ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再 UserService 中添加注入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> RedisUtil redisUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisUtil</span><span class="params">(RedisUtil redisUtil)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisUtil = redisUtil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我给出的 demo 中没有用到 RedisUtil</p></blockquote><p>####</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564641308991-0662e458-49ff-4b5e-8cd5-764252511dc0.png#align=left&amp;display=inline&amp;height=645&amp;name=image.png&amp;originHeight=645&amp;originWidth=795&amp;size=52028&amp;status=done&amp;width=795" alt="image.png"></p><h5 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h5><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564641338758-2fa632b2-e95a-4b51-a13b-cca04218e323.png#align=left&amp;display=inline&amp;height=504&amp;name=image.png&amp;originHeight=504&amp;originWidth=643&amp;size=35152&amp;status=done&amp;width=643" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564641383148-3b76db65-1147-4aab-bd9e-037162b81af9.png#align=left&amp;display=inline&amp;height=690&amp;name=image.png&amp;originHeight=690&amp;originWidth=782&amp;size=55974&amp;status=done&amp;width=782" alt="image.png"></p><p>####</p><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564641428303-8d76523a-aeb7-44b4-bc70-ba1612618a5a.png#align=left&amp;display=inline&amp;height=400&amp;name=image.png&amp;originHeight=400&amp;originWidth=704&amp;size=27586&amp;status=done&amp;width=704" alt="image.png"></p><h4 id><a href="#" class="headerlink" title></a><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564641449104-bc97c776-a5eb-47f7-ad39-a8b51c0bce37.png#align=left&amp;display=inline&amp;height=577&amp;name=image.png&amp;originHeight=577&amp;originWidth=678&amp;size=41372&amp;status=done&amp;width=678" alt="image.png"></h4><p>####</p><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-lang.version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">commons-lang.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    不使用默认的 tomcat 用 undertow    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-undertow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--        实体类中不用 get/set 和构造器一个注解搞定--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        最常用的 string 和 date 的一些支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--        demo中的redis包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        demo中用来反序列化的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>LATEST<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/2019/08/01/yuque/Redis/"/>
      <url>/2019/08/01/yuque/Redis/</url>
      
        <content type="html"><![CDATA[<p>在我们日常的 Java Web 开发中，无不都是使用数据库来进行数据的存储，由于一般的系统任务中通常不会存在高并发的情况，所以这样看起来并没有什么问题，可是一旦涉及<strong>大数据量</strong>的需求，比如一些商品抢购的情景，或者是<strong>主页访问量瞬间较大</strong>的时候，单一使用数据库来保存数据的系统会因为面向磁盘，磁盘读/写速度比较慢的问题而存在严重的性能弊端，一瞬间成千上万的请求到来，需要系统在<strong>极短的时间内完成成千上万次的读/写操作</strong>，这个时候往往不是数据库能够承受的，<strong>极其容易造成数据库系统瘫痪，最终导致服务宕机的严重生产问题。</strong><br>加入 Redis，请求过来先从 Redis 中取数据，若没有数据才会去数据库中取，我们将<strong>热点</strong>数据存到 Redis 中，减轻数据库的压力。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HashMap</title>
      <link href="/2019/08/01/yuque/HashMap/"/>
      <url>/2019/08/01/yuque/HashMap/</url>
      
        <content type="html"><![CDATA[<p><strong>HashMap 默认 bucket 数组多大？</strong><br>16</p><p><strong>如果 new HashMap&lt;&gt;(19)，bucket 数组多大？</strong><br>32</p><p><strong>HashMap 什么时候开辟 bucket 数组占用内存？</strong><br>第一次 put 时，并不是 new 的时候</p><p><strong>HashMap 何时扩容？</strong><br>put 的元素达到容量乘负载因子的时候，默认 16*0.75</p><p>JDK8 中 HashMap 引入了红黑树来处理哈希碰撞，对比翻看下 JDK8 和 JDK7 的 HashMap 源码，得出结论：</p><ol><li>HashMap 在 new 后并不会立即分配 bucket 数组，而是第一次 put 时初始化，类似 ArrayList 在第一次 add 时分配空间。</li><li>HashMap 的 bucket 数组大小一定是 2 的幂，<strong>如果 new 的时候指定了容量且不是 2 的幂，实际容量会是最接近(大于)指定容量的 2 的幂，比如 new HashMap&lt;&gt;(19)，比 19 大且最接近的 2 的幂是 32，实际容量就是 32。</strong></li><li>HashMap 在 put 的元素数量大于 Capacity LoadFactor（默认 16*0.75） 之后会进行扩容。</li><li>JDK8 在哈希碰撞的链表长度达到 TREEIFY_THRESHOLD（默认 8)后，会把该链表转变成树结构，提高了性能。</li><li>JDK8 在 resize 的时候，通过巧妙的设计，减少了 rehash 的性能消耗。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 搭建 Redis</title>
      <link href="/2019/07/30/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Redis/"/>
      <url>/2019/07/30/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Redis/</url>
      
        <content type="html"><![CDATA[<p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker pull redis</span><br></pre></td></tr></table></figure><p>运行镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -p 6379:6379 --restart=always -d redis:latest redis-server</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>命令</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>-d</td><td>本地运行</td></tr><tr><td>6379:6379</td><td>本地端口:Docker 端口</td></tr><tr><td>-v</td><td>指定驱动盘</td></tr><tr><td>G:\redisData</td><td>Redis 的持久化文件存储</td></tr><tr><td>redis</td><td>docker 的镜像名</td></tr><tr><td>redis-server</td><td>redis 服务器</td></tr><tr><td>–appendonly yes</td><td>开启持久化</td></tr><tr><td>–name</td><td>执行这个运行的名称</td></tr><tr><td>–restart=always</td><td>Docker 启动容器就启动</td></tr></tbody></table><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564475897234-6fb3b6b0-c5ab-4d4a-88ee-c53a37d23e8b.png#align=left&amp;display=inline&amp;height=424&amp;name=image.png&amp;originHeight=424&amp;originWidth=617&amp;size=32149&amp;status=done&amp;width=617" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 搭建 Halo 博客</title>
      <link href="/2019/07/30/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Halo%20%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/07/30/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Halo%20%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>halo 博客是一款轻量级的 java 博客  <a href="https://github.com/halo-dev/halo" target="_blank" rel="noopener">https://github.com/halo-dev/halo</a></p><p>在/usr/ 目录下下载  halo 的 jar 包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> wget https://github.com/halo-dev/halo/releases/download/v1.0.3/halo-1.0.3.jar -O halo-latest.jar</span><br></pre></td></tr></table></figure><p>halo 默认的端口是 8090</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d -p 8090:8090 -v  /usr/halo-latest.jar:/usr/halo-latest.jar --name halo_blog java:8u111 java -jar /usr/halo-latest.jar</span><br></pre></td></tr></table></figure><p>打开浏览器：<a href="http://ip:8090" target="_blank" rel="noopener">http://ip:8090</a> 就可以访问了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 搭建 Jenkins</title>
      <link href="/2019/07/30/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Jenkins/"/>
      <url>/2019/07/30/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Jenkins/</url>
      
        <content type="html"><![CDATA[<p>下载 jenkins</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker pull jenkins/jenkins</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker images</span><br></pre></td></tr></table></figure><p>启动镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -d -p 80:8080 -p 50000:50000 -v jenkins:/var/jenkins_home -v /etc/localtime:/etc/localtime --name jenkins docker.io/jenkins/jenkins</span><br></pre></td></tr></table></figure><ul><li><code>-d</code> 后台运行镜像</li><li><code>-p 80:8080</code> 将镜像的 8080 端口映射到服务器的 80 端口</li><li><code>-p 50000:50000</code> 将镜像的 50000 端口映射到服务器的 50000 端口</li><li><code>-v jenkins:/var/jenkins_home</code> <code>/var/jenkins_home</code>目录为 jenkins 工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。</li><li><code>-v /etc/localtime:/etc/localtime</code> 让容器使用和服务器同样的时间设置。</li><li><code>--name jenkins</code> 给容器起一个别名</li></ul><p>进入 <a href="http://ip" target="_blank" rel="noopener">http://ip</a> 进行配置</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564454625482-ce6d1fa9-6aa3-4613-817e-e5247aa0005d.png#align=left&amp;display=inline&amp;height=885&amp;originHeight=885&amp;originWidth=1228&amp;size=0&amp;status=done&amp;width=1228" alt><br>从容器路径获取初始密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker exec jenkins tail /var/jenkins_home/secrets/initialAdminPassword</span><br><span class="line">7b5f88a8d9214934934978869b99c61b</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564454764007-4035704f-75dc-4e4b-9ee4-e77bed1fc625.png#align=left&amp;display=inline&amp;height=897&amp;originHeight=897&amp;originWidth=1231&amp;size=0&amp;status=done&amp;width=1231" alt><br>安装好插件之后创建管理员账号<br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564454847792-a0cc5464-da43-4243-bb52-70faa223bba9.png#align=left&amp;display=inline&amp;height=877&amp;originHeight=877&amp;originWidth=1228&amp;size=0&amp;status=done&amp;width=1228" alt></p><p>进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker exec -it jenkins /bin/bash</span><br></pre></td></tr></table></figure><p>生成密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ssh-keygen -t rsa -C "2284711614@qq.com"</span><br></pre></td></tr></table></figure><p>查看密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> tail /var/lib/docker/volumes/jenkins/_data/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 搭建 Gogs 本地仓库</title>
      <link href="/2019/07/29/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Gogs%20%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/"/>
      <url>/2019/07/29/yuque/Docker%20%E6%90%AD%E5%BB%BA%20Gogs%20%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span>mkdir -p /var/gogs</span><br></pre></td></tr></table></figure><p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker pull gogs/gogs</span><br></pre></td></tr></table></figure><p>启动镜像，将容器 10022 映射到宿主机 22 端口，将容器 3000 端口映射到宿主机 22 端口，将容器/data 目录映射到宿主机/var/gogs 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run --name=gogs -d -p 10022:22 -p 3000:3000 -v /var/gogs:/data gogs/gogs</span><br></pre></td></tr></table></figure><p>进入 ip/3000/install 进行设置</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564447348329-3e3e77e4-8c7f-42d5-8032-ac665d1e7704.png#align=left&amp;display=inline&amp;height=942&amp;originHeight=942&amp;originWidth=1169&amp;size=0&amp;status=done&amp;width=1169" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker MySQL 远程连接</title>
      <link href="/2019/07/29/yuque/Docker%20MySQL%20%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
      <url>/2019/07/29/yuque/Docker%20MySQL%20%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="配置容器"><a href="#配置容器" class="headerlink" title="配置容器"></a>配置容器</h3><p>下载 mysql 容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker pull mysql</span><br></pre></td></tr></table></figure><p>将本地 33306 端口映射到容器 3306 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run -di --name docker_mysql -p 33306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure><p>进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker exec -it docker_mysql /bin/bash</span><br></pre></td></tr></table></figure><h3 id="设置远程登录"><a href="#设置远程登录" class="headerlink" title="设置远程登录"></a>设置远程登录</h3><p>登录 mysql，密码就是我们刚刚设置的 <strong>MYSQL_ROOT_PASSWORD=123456</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@8b7eb4eb9407:/# mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.6.44 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><p>root 远程登录权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> GRANT ALL ON *.* TO 'root'@'%';</span><br><span class="line">Query OK, 0 rows affected (0.23 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span> flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>退出 mysql，退出容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> exit</span><br><span class="line">Bye</span><br><span class="line">root@8b7eb4eb9407:/# exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>Navicat 测试连接</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564390302823-1436e27d-c383-4892-951e-6811020ae8ea.png#align=left&amp;display=inline&amp;height=354&amp;name=image.png&amp;originHeight=354&amp;originWidth=457&amp;size=18226&amp;status=done&amp;style=none&amp;width=457" alt="image.png"></p><p>Tip:<br>在 docker 中运行 mysql 可能会内存占用过高，mysql 会动不动就挂掉，可以通过修改 mysql 配置文件的方法来改善这种情况：<a href="https://www.jianshu.com/p/5a344c258d5f" target="_blank" rel="noopener">https://www.jianshu.com/p/5a344c258d5f</a></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h3><p>Authentication plugin ‘caching_sha2_password’ cannot be loaded</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>修改加密规则</span><br><span class="line"><span class="meta">$</span> ALTER USER 'root'@'localhost' IDENTIFIED BY 'password' PASSWORD EXPIRE NEVER;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>更新一下用户密码</span><br><span class="line"><span class="meta">$</span> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>刷新权限</span><br><span class="line"><span class="meta">$</span> FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一本docker书：Sinatra容器</title>
      <link href="/2019/07/29/yuque/%E7%AC%AC%E4%B8%80%E6%9C%ACdocker%E4%B9%A6%EF%BC%9ASinatra%E5%AE%B9%E5%99%A8/"/>
      <url>/2019/07/29/yuque/%E7%AC%AC%E4%B8%80%E6%9C%ACdocker%E4%B9%A6%EF%BC%9ASinatra%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>创建 Sinatra 站点的 Dockerfile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir sinatra &amp;&amp; cd sinatra</span><br><span class="line"><span class="meta">$</span> touch Dockerfile</span><br></pre></td></tr></table></figure><p>创建容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:18.04</span><br><span class="line">LABEL maintainer="james@example.com"</span><br><span class="line">ENV REFRESHED_AT 2014-06-01</span><br><span class="line"></span><br><span class="line">RUN apt-get -qq update &amp;&amp; apt-get -qq install ruby ruby-dev build-essential redis-tools</span><br><span class="line">RUN gem install --no-rdoc --no-ri sinatra json redis</span><br><span class="line"></span><br><span class="line">RUN mkdir -p /opt/webapp</span><br><span class="line"></span><br><span class="line">EXPOSE 4567</span><br><span class="line"></span><br><span class="line">CMD [ "/opt/webapp/bin/webapp" ]</span><br></pre></td></tr></table></figure><p>构建新的 Sinatra 镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo docker build -t jamtur01/sinatra .</span><br></pre></td></tr></table></figure><p>下载 Sinatra Web 应用程序（下载 Sinatra 有问题 直接到这个项目里面下 <a href="https://github.com/turnbullpress/dockerbook-code" target="_blank" rel="noopener">https://github.com/turnbullpress/dockerbook-code</a>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd sinatra</span><br><span class="line"><span class="meta">$</span> wget --cut-dirs=3 -nH -r --reject Dockerfile,index.html --no-parent http://dockerbook.com/code/5/sinatra/webapp/</span><br><span class="line"><span class="meta">$</span> ls -l webapp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564387202280-125242d3-7980-4147-b6b7-de13a90b1428.png#align=left&amp;display=inline&amp;height=338&amp;name=image.png&amp;originHeight=338&amp;originWidth=419&amp;size=21895&amp;status=done&amp;width=419" alt="image.png"></p><p>确保 webapp/bin/webapp 可以执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> chmod +x webapp/bin/webapp</span><br></pre></td></tr></table></figure><p>启动第一个 Sinatra 容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo docker run -d -p 4567 --name webapp \</span><br><span class="line">  -v $PWD/webapp:/opt/webapp jamtur01/sinatra</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_57_214_centos sinatra]# sudo docker port webapp 4567</span><br><span class="line">0.0.0.0:32770</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> curl -i -H 'Accept: application/json' \</span><br><span class="line">  -d 'name=Foo&amp;status=Bar' http://localhost:32770/json</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1564387428190-1a8c2257-b9f1-4082-8c93-d70141c33fad.png#align=left&amp;display=inline&amp;height=451&amp;name=image.png&amp;originHeight=451&amp;originWidth=655&amp;size=63063&amp;status=done&amp;width=655" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一本docker书：Sample网站</title>
      <link href="/2019/07/29/yuque/%E7%AC%AC%E4%B8%80%E6%9C%ACdocker%E4%B9%A6%EF%BC%9ASample%E7%BD%91%E7%AB%99/"/>
      <url>/2019/07/29/yuque/%E7%AC%AC%E4%B8%80%E6%9C%ACdocker%E4%B9%A6%EF%BC%9ASample%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h4 id="创建-sample-站点的-Dockerfile"><a href="#创建-sample-站点的-Dockerfile" class="headerlink" title="创建 sample 站点的 Dockerfile"></a>创建 sample 站点的 Dockerfile</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir sample &amp;&amp; cd sample</span><br><span class="line"><span class="meta">$</span> touch Dockerfile</span><br></pre></td></tr></table></figure><h4 id="获取-Nginx-配置文件"><a href="#获取-Nginx-配置文件" class="headerlink" title="获取 Nginx 配置文件"></a>获取 Nginx 配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir nginx &amp;&amp; cd nginx</span><br><span class="line"><span class="meta">$</span> wget https://raw.githubusercontent.com/jamtur01/dockerbook-code/master/code/5/sample/nginx/global.conf</span><br><span class="line"><span class="meta">$</span> wget http://raw.githubusercontent.com/jamtur01/dockerbook-code/master/code/5/sample/nginx/nginx.conf</span><br><span class="line"><span class="meta">$</span> cd ..</span><br></pre></td></tr></table></figure><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:14.04</span><br><span class="line">MAINTAINER vonzhou "vonzhou@163.com"</span><br><span class="line">ENV REFRESHED_AT 2018-03-21</span><br><span class="line">RUN apt-get -yqq update &amp;&amp; apt-get -yqq install nginx</span><br><span class="line">RUN mkdir -p /var/wwww/html/website</span><br><span class="line">ADD nginx/global.conf /etc/nginx/conf.d/</span><br><span class="line">ADD nginx/nginx.conf /etc/nginx/nginx.conf</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><h4 id="构建新的-Nginx-镜像"><a href="#构建新的-Nginx-镜像" class="headerlink" title="构建新的 Nginx 镜像"></a>构建新的 Nginx 镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo docker build -t jamtur01/nginx .</span><br></pre></td></tr></table></figure><h4 id="展示-Nginx-镜像的构建历史"><a href="#展示-Nginx-镜像的构建历史" class="headerlink" title="展示 Nginx 镜像的构建历史"></a>展示 Nginx 镜像的构建历史</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo docker history jamtur01/nginx</span><br></pre></td></tr></table></figure><h4 id="下载-Sample-网站"><a href="#下载-Sample-网站" class="headerlink" title="下载 Sample 网站"></a>下载 Sample 网站</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir website &amp;&amp; cd website</span><br><span class="line"><span class="meta">$</span> wget https://raw.githubusercontent.com/jamtur01/dockerbook-code/master/code/5/sample/website/index.html</span><br><span class="line"><span class="meta">$</span> cd ..</span><br></pre></td></tr></table></figure><h4 id="构建第一个-Nginx-测试容器"><a href="#构建第一个-Nginx-测试容器" class="headerlink" title="构建第一个 Nginx 测试容器"></a>构建第一个 Nginx 测试容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo docker run -d -p 80 --name website \</span><br><span class="line">  -v $PWD/website:/var/www/html/website \</span><br><span class="line">  jamtur01/nginx nginx</span><br></pre></td></tr></table></figure><h4 id="查看-Sample-容器"><a href="#查看-Sample-容器" class="headerlink" title="查看 Sample 容器"></a>查看 Sample 容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_57_214_centos sample]# docker ps -l</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                   NAMES</span><br><span class="line">fb76499c3136        jamtur01/nginx      "nginx"             6 minutes ago       Up 6 minutes        0.0.0.0:32769-&gt;80/tcp   website</span><br><span class="line"></span><br><span class="line">[root@VM_57_214_centos sample]# docker port fb76499c3136 80</span><br><span class="line">0.0.0.0:32769</span><br></pre></td></tr></table></figure><p>宿主机上访问 32769 端口</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 多线程 线程计数器</title>
      <link href="/2019/07/24/yuque/Java%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%20%E7%BA%BF%E7%A8%8B%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
      <url>/2019/07/24/yuque/Java%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%20%E7%BA%BF%E7%A8%8B%E8%AE%A1%E6%95%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; ips = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">Map&lt;String, Boolean&gt; map = <span class="keyword">new</span> HashMap&lt;String, Boolean&gt;();</span><br><span class="line">CountDownLatch latch = <span class="keyword">new</span> CountDownLatch(ips.size()); <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">System.out.println(DateFormatUtils.format(<span class="keyword">new</span> Date(), <span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line">ips.forEach(ip -&gt; &#123;</span><br><span class="line">    Thread thread = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            map.put(ip, PortConnectUtil.connect(ip)); <span class="comment">//2</span></span><br><span class="line">            latch.countDown(); <span class="comment">//3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    thread.start();</span><br><span class="line">&#125;);</span><br><span class="line">latch.await(); <span class="comment">//4</span></span><br><span class="line">System.out.println(DateFormatUtils.format(<span class="keyword">new</span> Date(), <span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line">System.out.println(map);</span><br></pre></td></tr></table></figure><ol><li>线程数量</li><li>这边用一个 map 封装一下返回的参数，方便批量操作数据库</li><li>线程计数器</li><li>所有线程执行完毕再进行下面的操作</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot swagger文档</title>
      <link href="/2019/07/19/yuque/Spring%20boot%20swagger%E6%96%87%E6%A1%A3/"/>
      <url>/2019/07/19/yuque/Spring%20boot%20swagger%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.lcmoled.ehs360web"</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build()</span><br><span class="line">                .apiInfo(apiInfo());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"xxx"</span>)</span><br><span class="line">                .description(<span class="string">"API文档"</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">"http://lcmoled.com/"</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 部署 gitlab 遇到问题</title>
      <link href="/2019/07/11/yuque/CentOS%20%E9%83%A8%E7%BD%B2%20gitlab%20%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98/"/>
      <url>/2019/07/11/yuque/CentOS%20%E9%83%A8%E7%BD%B2%20gitlab%20%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>There was an error running gitlab-ctl reconfigure</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl stop</span><br><span class="line">sudo chmod 755 /var/opt/gitlab/postgresql</span><br><span class="line">sudo systemctl restart gitlab-runsvdir</span><br><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl start # 启动所有 gitlab 组件；</span><br><span class="line">sudo gitlab-ctl stop # 停止所有 gitlab 组件；</span><br><span class="line">sudo gitlab-ctl restart # 重启所有 gitlab 组件；</span><br><span class="line">sudo gitlab-ctl status # 查看服务状态；</span><br><span class="line">sudo gitlab-ctl reconfigure # 启动服务；</span><br><span class="line">sudo vim /etc/gitlab/gitlab.rb # 修改默认的配置文件；</span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true --trace # 检查gitlab；</span><br><span class="line">sudo gitlab-ctl tail # 查看日志；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 类加载器 ClassLoader</title>
      <link href="/2019/07/05/yuque/Java%20%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%20ClassLoader/"/>
      <url>/2019/07/05/yuque/Java%20%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%20ClassLoader/</url>
      
        <content type="html"><![CDATA[<p>JDK 默认提供了如下几种 ClassLoader：<br>**<br><strong>Bootstrp loader</strong><br>Bootstrp 加载器是用 C++语言写的，它是在 Java 虚拟机启动后初始化的，它主要负责加载<code>%JAVA_HOME%/jre/lib</code>,<code>-Xbootclasspath</code>参数指定的路径以及<code>%JAVA_HOME%/jre/classes</code>中的类。</p><p><strong>ExtClassLoader  </strong><br>Bootstrp loader 加载 ExtClassLoader,并且将 ExtClassLoader 的父加载器设置为 Bootstrp loader.ExtClassLoader 是用 Java 写的，具体来说就是 sun.misc.Launcher\$ExtClassLoader，ExtClassLoader 主要加载<code>%JAVA_HOME%/jre/lib/ext</code>，此路径下的所有 classes 目录以及<code>java.ext.dirs</code>系统变量指定的路径中类库。</p><p><strong>AppClassLoader </strong><br>Bootstrp loader 加载完 ExtClassLoader 后，就会加载 AppClassLoader,并且将 AppClassLoader 的父加载器指定为 ExtClassLoader。AppClassLoader 也是用 Java 写成的，它的实现类是 sun.misc.Launcher\$AppClassLoader，另外我们知道 ClassLoader 中有个<code>getSystemClassLoader</code>方法,此方法返回的正是 AppclassLoader.AppClassLoader 主要负责加载 classpath 所指定的位置的类或者是 jar 文档，它也是 Java 程序默认的类加载器。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cookie 和 Session 的区别</title>
      <link href="/2019/07/05/yuque/Cookie%20%E5%92%8C%20Session%20%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/07/05/yuque/Cookie%20%E5%92%8C%20Session%20%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>Cookie 和 Session 都是用来跟踪浏览器用户身份的会话方式，但是两者的应用场景不太一样。</p><p><strong>Cookie 一般用来保存用户信息</strong><br>比如：<br>① 我们在 Cookie 中保存已经登录过得用户信息，下次访问网站的时候页面可以自动帮你登录的一些基本信息给填了；<br>② 一般的网站都会有保持登录也就是说下次你再访问网站的时候就不需要重新登录了，这是因为用户登录的时候我们可以存放了一个 Token 在 Cookie 中，下次登录的时候只需要根据 Token 值来查找用户即可(为了安全考虑，重新登录一般要将 Token 重写)；<br>③ 登录一次网站后访问网站其他页面不需要重新登录。<br>cookieId</p><p><strong>Session 的主要作用就是通过服务端记录用户的状态。</strong><br>典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了。</p><p>Cookie 数据保存在客户端(浏览器端)，Session 数据保存在服务器端。<br>Cookie 存储在客户端中，而 Session 存储在服务器上，相对来说 Session 安全性更高。如果使用 Cookie 的一些敏感信息不要写入 Cookie 中，最好能将 Cookie 信息加密然后使用到的时候再去服务器端解密。</p><p><a href="https://snailclimb.gitee.io/javaguide/#/java/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86?id=cookie%e5%92%8csession%e7%9a%84%e7%9a%84%e5%8c%ba%e5%88%ab" target="_blank" rel="noopener">链接</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA Perhaps you are running on a JRE rather than a JDK</title>
      <link href="/2019/06/06/yuque/IDEA%20Perhaps%20you%20are%20running%20on%20a%20JRE%20rather%20than%20a%20JDK/"/>
      <url>/2019/06/06/yuque/IDEA%20Perhaps%20you%20are%20running%20on%20a%20JRE%20rather%20than%20a%20JDK/</url>
      
        <content type="html"><![CDATA[<p>执行 mvn 命令的时候报没有 jdk 的错</p><p>是因为配置 jdk 的时候，为了图省事，没有配置以 JAVA_HOME 命名的环境变量，或者直接用的 exe 的安装包直接安装的 jdk 。<br>配置一下  JAVA_HOME 就行了。</p><p><a href="https://jingyan.baidu.com/article/9faa72319a93ae473c28cb92.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/9faa72319a93ae473c28cb92.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSP有哪些内置对象和作用</title>
      <link href="/2019/06/04/yuque/JSP%E6%9C%89%E5%93%AA%E4%BA%9B%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%92%8C%E4%BD%9C%E7%94%A8/"/>
      <url>/2019/06/04/yuque/JSP%E6%9C%89%E5%93%AA%E4%BA%9B%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%92%8C%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="JSP-有-9-个内置对象"><a href="#JSP-有-9-个内置对象" class="headerlink" title="JSP 有 9 个内置对象"></a>JSP 有 9 个内置对象</h3><ul><li>request：封装客户端的请求，其中包含来自 GET 或 POST 请求的参数；</li><li>response：封装服务器对客户端的响应；</li><li>pageContext：通过该对象可以获取其他对象；</li><li>session：封装用户会话的对象；</li><li>application：封装服务器运行环境的对象；</li><li>out：输出服务器响应的输出流对象；</li><li>config：Web 应用的配置对象；</li><li>page：JSP 页面本身（相当于 Java 程序中的 this）；</li><li>exception：封装页面抛出异常的对象。</li></ul><h3 id="Request-对象的主要方法有哪些"><a href="#Request-对象的主要方法有哪些" class="headerlink" title="Request 对象的主要方法有哪些"></a>Request 对象的主要方法有哪些</h3><ul><li>setAttribute(String name,Object)：设置名字为 name 的 request 的参数值</li><li>getAttribute(String name)：返回由 name 指定的属性值</li><li>getAttributeNames()：返回 request 对象所有属性的名字集合，结果是一个枚举的实例</li><li>getCookies()：返回客户端的所有 Cookie 对象，结果是一个 Cookie 数组</li><li>getCharacterEncoding() ：返回请求中的字符编码方式 = getContentLength() ：返回请求的 Body 的长度</li><li>getHeader(String name) ：获得 HTTP 协议定义的文件头信息</li><li>getHeaders(String name) ：返回指定名字的 request Header 的所有值，结果是一个枚举的实例</li><li>getHeaderNames() ：返回所以 request Header 的名字，结果是一个枚举的实例</li><li>getInputStream() ：返回请求的输入流，用于获得请求中的数据</li><li>getMethod() ：获得客户端向服务器端传送数据的方法</li><li>getParameter(String name) ：获得客户端传送给服务器端的有 name 指定的参数值</li><li>getParameterNames() ：获得客户端传送给服务器端的所有参数的名字，结果是一个枚举的实例</li><li>getParameterValues(String name)：获得有 name 指定的参数的所有值</li><li>getProtocol()：获取客户端向服务器端传送数据所依据的协议名称</li><li>getQueryString() ：获得查询字符串</li><li>getRequestURI() ：获取发出请求字符串的客户端地址</li><li>getRemoteAddr()：获取客户端的 IP 地址</li><li>getRemoteHost() ：获取客户端的名字</li><li>getSession([Boolean create]) ：返回和请求相关 Session</li><li>getServerName() ：获取服务器的名字</li><li>getServletPath()：获取客户端所请求的脚本文件的路径</li><li>getServerPort()：获取服务器的端口号</li><li>removeAttribute(String name)：删除请求中的一个属性</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>转发(Forward)和重定向(Redirect)的区别</title>
      <link href="/2019/06/04/yuque/%E8%BD%AC%E5%8F%91(Forward)%E5%92%8C%E9%87%8D%E5%AE%9A%E5%90%91(Redirect)%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/06/04/yuque/%E8%BD%AC%E5%8F%91(Forward)%E5%92%8C%E9%87%8D%E5%AE%9A%E5%90%91(Redirect)%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p><strong>转发是服务器行为，重定向是客户端行为。</strong> *<strong>*转发（Forward）</strong>  通过 RequestDispatcher 对象的 forward（HttpServletRequest request,HttpServletResponse response）方法实现的。RequestDispatcher 可以通过 HttpServletRequest 的 getRequestDispatcher()方法获得。例如下面的代码就是跳转到 login_success.jsp 页面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">"login_success.jsp"</span>).forward(request, response);</span><br></pre></td></tr></table></figure><p><strong>重定向（Redirect）</strong>  是利用服务器返回的状态码来实现的。客户端浏览器请求服务器的时候，服务器会返回一个状态码。服务器通过  <code>HttpServletResponse</code>  的  <code>setStatus(int status)</code>  方法设置状态码。如果服务器返回 301 或者 302，则浏览器会到新的网址重新请求该资源。</p><p><strong>从地址栏显示来说</strong></p><p>forward 是服务器请求资源,服务器直接访问目标地址的 URL,把那个 URL 的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,所以它的地址栏还是原来的地址. redirect 是服务端根据逻辑,发送一个状态码,告诉浏览器重新去请求那个地址.所以地址栏显示的是新的 URL.</p><p><strong>从数据共享来说</strong><br>**<br>forward:转发页面和转发到的页面可以共享 request 里面的数据. redirect:不能共享数据.</p><p><strong>从运用地方来说</strong><br>**<br>forward:一般用于用户登陆的时候,根据角色转发到相应的模块. redirect:一般用于用户注销登陆时返回主页面和跳转到其它的网站等</p><p><strong>从效率来说</strong><br>**<br>forward:高. redirect:低.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Collections 工具类和 Arrays 工具类常见方法</title>
      <link href="/2019/06/04/yuque/Collections%20%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%92%8C%20Arrays%20%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/"/>
      <url>/2019/06/04/yuque/Collections%20%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%92%8C%20Arrays%20%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h3><ul><li>排序操作</li><li>查找,替换操作</li><li>同步控制</li></ul><h4 id="排序操作"><a href="#排序操作" class="headerlink" title="排序操作"></a>排序操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(List list)</span><span class="comment">//反转</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(List list)</span><span class="comment">//随机排序</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(List list)</span><span class="comment">//按自然排序的升序排序</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(List list, Comparator c)</span><span class="comment">//定制排序，由Comparator控制排序逻辑</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(List list, <span class="keyword">int</span> i , <span class="keyword">int</span> j)</span><span class="comment">//交换两个索引位置的元素</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(List list, <span class="keyword">int</span> distance)</span><span class="comment">//旋转。当distance为正数时，将list后distance个元素整体移到前面。当distance为负数时，将 list的前distance个元素整体移到后面。</span></span></span><br></pre></td></tr></table></figure><h4 id="查找-替换操作"><a href="#查找-替换操作" class="headerlink" title="查找,替换操作"></a>查找,替换操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(List list, Object key)</span><span class="comment">//对List进行二分查找，返回索引，注意List必须是有序的</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(Collection coll)</span><span class="comment">//根据元素的自然顺序，返回最大的元素。 类比int min(Collection coll)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(Collection coll, Comparator c)</span><span class="comment">//根据定制排序，返回最大元素，排序规则由Comparatator类控制。类比int min(Collection coll, Comparator c)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fill</span><span class="params">(List list, Object obj)</span><span class="comment">//用指定的元素代替指定list中的所有元素。</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">frequency</span><span class="params">(Collection c, Object o)</span><span class="comment">//统计元素出现次数</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOfSubList</span><span class="params">(List list, List target)</span><span class="comment">//统计target在list中第一次出现的索引，找不到则返回-1，类比int lastIndexOfSubList(List source, list target).</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">replaceAll</span><span class="params">(List list, Object oldVal, Object newVal)</span>, 用新元素替换旧元素</span></span><br></pre></td></tr></table></figure><h4 id="同步控制"><a href="#同步控制" class="headerlink" title="同步控制"></a>同步控制</h4><p>Collections 提供了多个 synchronizedXxx()方法·，该方法可以将指定集合包装成线程同步的集合，从而解决多线程并发访问集合时的线程安全问题。<br>我们知道 HashSet，TreeSet，ArrayList,LinkedList,HashMap,TreeMap 都是线程不安全的。Collections 提供了多个静态方法可以把他们包装成线程同步的集合。<br><strong>最好不要用下面这些方法，效率非常低，需要线程安全的集合类型时请考虑使用 JUC 包下的并发集合。</strong><br>方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">synchronizedCollection(Collection  c) <span class="comment">//返回指定 collection 支持的同步（线程安全的）collection。</span></span><br><span class="line">synchronizedList(List list)<span class="comment">//返回指定列表支持的同步（线程安全的）List。</span></span><br><span class="line">synchronizedMap(Map&lt;K,V&gt; m) <span class="comment">//返回由指定映射支持的同步（线程安全的）Map。</span></span><br><span class="line">synchronizedSet(Set s) <span class="comment">//返回指定 set 支持的同步（线程安全的）set。</span></span><br></pre></td></tr></table></figure><h3 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h3><ul><li>排序 : <code>sort()</code></li><li>查找 : <code>binarySearch()</code></li><li>比较: <code>equals()</code></li><li>填充 : <code>fill()</code></li><li>转列表  <code>asList()</code></li><li>转字符串  <code>toString()</code></li><li>复制  <code>copyOf()</code></li></ul><h4 id="binarySearch"><a href="#binarySearch" class="headerlink" title="binarySearch"></a>binarySearch</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// *************查找 binarySearch()****************</span></span><br><span class="line"><span class="keyword">char</span>[] e = &#123; <span class="string">'a'</span>, <span class="string">'f'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'A'</span>, <span class="string">'C'</span>, <span class="string">'B'</span> &#125;;</span><br><span class="line"><span class="comment">// 排序后再进行二分查找，否则找不到</span></span><br><span class="line">Arrays.sort(e);</span><br><span class="line">System.out.println(<span class="string">"Arrays.sort(e)"</span> + Arrays.toString(e));</span><br><span class="line">System.out.println(<span class="string">"Arrays.binarySearch(e, 'c')："</span>);</span><br><span class="line"><span class="keyword">int</span> s = Arrays.binarySearch(e, <span class="string">'c'</span>);</span><br><span class="line">System.out.println(<span class="string">"字符c在数组的位置："</span> + s);</span><br></pre></td></tr></table></figure><h4 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// *************比较 equals****************</span></span><br><span class="line"><span class="keyword">char</span>[] e = &#123; <span class="string">'a'</span>, <span class="string">'f'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'A'</span>, <span class="string">'C'</span>, <span class="string">'B'</span> &#125;;</span><br><span class="line"><span class="keyword">char</span>[] f = &#123; <span class="string">'a'</span>, <span class="string">'f'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'A'</span>, <span class="string">'C'</span>, <span class="string">'B'</span> &#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 元素数量相同，并且相同位置的元素相同。 另外，如果两个数组引用都是null，则它们被认为是相等的 。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 输出true</span></span><br><span class="line">System.out.println(<span class="string">"Arrays.equals(e, f):"</span> + Arrays.equals(e, f));</span><br></pre></td></tr></table></figure><p>参考：<a href="https://gitee.com/SnailClimb/JavaGuide/blob/master/docs/java/Basis/Arrays,CollectionsCommonMethods.md#%E5%90%8C%E6%AD%A5%E6%8E%A7%E5%88%B6" target="_blank" rel="noopener">https://gitee.com/SnailClimb/JavaGuide/blob/master/docs/java/Basis/Arrays,CollectionsCommonMethods.md#%E5%90%8C%E6%AD%A5%E6%8E%A7%E5%88%B6</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AOP 接口日志</title>
      <link href="/2019/05/21/yuque/AOP%20%E6%8E%A5%E5%8F%A3%E6%97%A5%E5%BF%97/"/>
      <url>/2019/05/21/yuque/AOP%20%E6%8E%A5%E5%8F%A3%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h4 id="RestLogAspect"><a href="#RestLogAspect" class="headerlink" title="RestLogAspect"></a>RestLogAspect</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestLogAspect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> RestHighLevelClient restHighLevelClient;</span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line">    <span class="keyword">private</span> ThreadLocal&lt;RestLog&gt; threadLocal = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"within(@org.springframework.web.bind.annotation.RestController *)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">springBeanPointcut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"springBeanPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logBefore</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == attributes) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        String paramData = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (!request.getRequestURI().contains(<span class="string">"/api/supervise/files"</span>)) &#123;</span><br><span class="line">            paramData = JSON.toJSONString(request.getParameterMap(), SerializerFeature.DisableCircularReferenceDetect, SerializerFeature.WriteMapNullValue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 保存接口信息</span></span><br><span class="line">        threadLocal.set(<span class="keyword">new</span> RestLog(LoggerUtil.getCliectIp(request), request.getRequestURI(), LoggerUtil.getRequestType(request)</span><br><span class="line">                , request.getMethod(), joinPoint.getSignature().getDeclaringTypeName() + <span class="string">"."</span> + joinPoint.getSignature().getName()</span><br><span class="line">                , paramData, request.getRequestedSessionId()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning</span>(value = <span class="string">"springBeanPointcut()"</span>, returning = <span class="string">"returnData"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logAfter</span><span class="params">(Object returnData)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == attributes) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HttpServletResponse response = attributes.getResponse();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == threadLocal.get() || <span class="keyword">null</span> == response) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        RestLog restLog = threadLocal.get();</span><br><span class="line">        <span class="comment">// 过滤图片接口请求</span></span><br><span class="line">        <span class="keyword">if</span> (!restLog.getUri().contains(<span class="string">"/api/supervise/files"</span>)) &#123;</span><br><span class="line">            restLog = threadLocal.get().init(JSON.toJSONString(returnData, SerializerFeature.DisableCircularReferenceDetect, SerializerFeature.WriteMapNullValue), response.getStatus());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            restLog = threadLocal.get().init(response.getStatus());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.save(restLog);</span><br><span class="line">        <span class="comment">// 写进 redis</span></span><br><span class="line">        <span class="keyword">this</span>.increment(<span class="keyword">this</span>.getApiKey(restLog.getUri(), restLog.getMethod()));</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing</span>(value = <span class="string">"springBeanPointcut()"</span>, throwing = <span class="string">"exception"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterThrowingAdvice</span><span class="params">(Throwable exception)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == threadLocal.get()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        RestLog restLog = threadLocal.get().exceptionMessage(exception.getMessage());</span><br><span class="line">        <span class="keyword">this</span>.save(restLog);</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(RestLog restLog)</span> </span>&#123;</span><br><span class="line">        IndexRequest indexRequest = <span class="keyword">new</span> IndexRequest(<span class="string">"rest-supervise-"</span> + DateFormatUtils.format(<span class="keyword">new</span> Date(), <span class="string">"yyyy.MM.dd"</span>), <span class="string">"doc"</span>, UUIDBase64Util.generate());</span><br><span class="line">        indexRequest.source(JSON.toJSONString(restLog), XContentType.JSON);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.restHighLevelClient.index(indexRequest);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">"RestLogAspect.save IOException:&#123;&#125;"</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">increment</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().increment(key, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getApiKey</span><span class="params">(String uri, String method)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.handleUri(uri) + <span class="string">"|"</span> + method.toLowerCase() + <span class="string">":"</span> + DateUtils.formatDate(<span class="keyword">new</span> Date(), <span class="string">"yyyyMMdd"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">handleUri</span><span class="params">(String uri)</span> </span>&#123;</span><br><span class="line">        StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (String s : uri.split(<span class="string">"/"</span>)) &#123;</span><br><span class="line">            stringBuilder.append(<span class="string">"/"</span>);</span><br><span class="line">            <span class="keyword">if</span> (s.matches(<span class="string">"\\d+"</span>) || <span class="number">22</span> == s.length()) &#123;</span><br><span class="line">                stringBuilder.append(<span class="string">"&#123;id&#125;"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuilder.append(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString().substring(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRestHighLevelClient</span><span class="params">(RestHighLevelClient restHighLevelClient)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.restHighLevelClient = restHighLevelClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisTemplate</span><span class="params">(StringRedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RestStatisticService"><a href="#RestStatisticService" class="headerlink" title="RestStatisticService"></a>RestStatisticService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveDaily</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Set&lt;String&gt; keys = <span class="keyword">this</span>.redisTemplate.keys(<span class="string">"api/*"</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> == keys) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  <span class="comment">// 将接口调用信息 保存到Redis</span></span><br><span class="line">      keys.forEach(</span><br><span class="line">              s -&gt; &#123;</span><br><span class="line">                  <span class="keyword">this</span>.restStatisticMapper.insert(<span class="keyword">new</span> RestStatistic(s, <span class="keyword">this</span>.redisTemplate.opsForValue().get(s)));</span><br><span class="line">                  <span class="keyword">this</span>.redisTemplate.delete(s);</span><br><span class="line">              &#125;</span><br><span class="line">      );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重启 jar 脚本</title>
      <link href="/2019/05/20/yuque/%E9%87%8D%E5%90%AF%20jar%20%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/05/20/yuque/%E9%87%8D%E5%90%AF%20jar%20%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"><span class="meta">#</span>description: 重启我的java 服务</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 杀死指定 java进程</span><br><span class="line">ps -ef|grep java| grep 'shop'|grep -v grep|cut -c 9-15|xargs kill -9 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">ps -ef|grep java| grep 'supervise'|grep -v grep|cut -c 9-15|xargs kill -9 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重启新的jar</span><br><span class="line">nohup java -jar shop-0.0.1-SNAPSHOT.jar &gt;&gt; shop.out &amp;</span><br><span class="line">echo "restart shop"</span><br><span class="line"></span><br><span class="line">nohup java -jar supervise-0.0.1-SNAPSHOT.jar &gt;&gt; supervise.out &amp;</span><br><span class="line">echo "restart supervise"</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Shiro Filter 自定义异常</title>
      <link href="/2019/05/16/yuque/Shiro%20Filter%20%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8/"/>
      <url>/2019/05/16/yuque/Shiro%20Filter%20%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<p>通常的 Spring 全局异常处理并不能处理 Filter 中的异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verifyUri</span><span class="params">(ServletRequest request, ServletResponse response)</span><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  request.getRequestDispatcher(AuthoritiesConstants.SHIRO_ERROR_EXCEPTION)</span><br><span class="line">    .forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个控制器，将过滤器的请求转发到控制器抛出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/error"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/shiro"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shiroError</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(ApiException.E_SHIRO_ACCESS_EXCEPTION);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis 如何才能做到高可用</title>
      <link href="/2019/04/29/yuque/Redis%20%E5%A6%82%E4%BD%95%E6%89%8D%E8%83%BD%E5%81%9A%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
      <url>/2019/04/29/yuque/Redis%20%E5%A6%82%E4%BD%95%E6%89%8D%E8%83%BD%E5%81%9A%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>一个 slave 挂掉了，是不会影响可用性的，还有其它的 slave 在提供相同数据下的相同的对外的查询服务。<br>但是，如果 master node 死掉了，会怎么样？没法写数据了，写缓存的时候，全部失效了。slave node 还有什么用呢，没有 master 给它们复制数据了，系统相当于不可用了。</p><p>redis 的高可用架构，叫做  failover <strong>故障转移</strong>，也可以叫做主备切换。<br>master node 在故障时，自动检测，并且将某个 slave node 自动切换为 master node 的过程，叫做主备切换。这个过程，实现了 redis 的主从架构下的高可用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MQ 保证消息消费的幂等性</title>
      <link href="/2019/04/13/yuque/MQ%20%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7/"/>
      <url>/2019/04/13/yuque/MQ%20%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="二次消费"><a href="#二次消费" class="headerlink" title="二次消费"></a>二次消费</h3><p>场景：<br>假设你这条消息已经消费过了，然后你重启了服务，消费过的消息没有同步到 MQ，产生了二次消费。</p><p>思路：</p><ul><li>比如你拿个数据要写库，你先根据主键查一下，如果这数据都有了，你就别插入了，update 一下好吧。</li><li>比如你是写 Redis，那没问题了，反正每次都是 set，天然幂等性。</li><li>比如你不是上面两个场景，那做的稍微复杂一点，你需要让生产者发送每条数据的时候，里面加一个全局唯一的 id，类似订单 id 之类的东西，然后你这里消费到了之后，先根据这个 id 去比如 Redis 里查一下，之前消费过吗？如果没有消费过，你就处理，然后这个 id 写 Redis。如果消费过了，那你就别处理了，保证别重复处理相同的消息即可。</li><li>比如基于数据库的唯一键来保证重复数据不会重复插入多条。因为有唯一键约束了，重复数据插入只会报错，不会导致数据库中出现脏数据。</li></ul><p>真实项目场景中，第一条和最后一条都有用到。<br>在这边我要提一个新的场景：批量入库效率比较重要的情况下，如何保证呢？<br>这里提供一个思路，将唯一 id 写入 Redis，然后在批量操作之前根据 Redis 中的 id 过滤一下写库的数据，另外数据库加上唯一主键约束。</p><h3 id="丢数据"><a href="#丢数据" class="headerlink" title="丢数据"></a>丢数据</h3><h4 id="消费端"><a href="#消费端" class="headerlink" title="消费端"></a>消费端</h4><p><strong>Kerry 项目中存在一个问题  </strong><br>Kafka 消费者消费到了数据之后是写到一个内存的 queue 里先缓冲一下，结果有的时候，你刚把消息写入内存 queue，然后消费者会自动提交 offset。然后此时我们重启了系统，就会导致内存 queue 里还没来得及处理的数据就丢失了。<br>上面这个场景比较极端，解决方案是<strong>关闭自动提交 offset</strong>，在处理完之后手动去提交 offset。</p><h4 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h4><p>Kafka 某个 broker 宕机，然后重新选举 partition 的 leader。此时其他的 follower 刚好还有些数据没有同步，结果此时 leader 挂了，然后选举某个 follower 成 leader 之后，不就少了一些数据？</p><p>此时一般是要求起码设置如下 4 个参数：</p><ul><li>给 topic 设置  <code>replication.factor</code>  参数：这个值必须大于 1，要求每个 partition 必须有至少 2 个副本。</li><li>在 Kafka 服务端设置  <code>min.insync.replicas</code>  参数：这个值必须大于 1，这个是要求一个 leader 至少感知到有至少一个 follower 还跟自己保持联系，没掉队，这样才能确保 leader 挂了还有一个 follower 吧。</li><li>在 producer 端设置  <code>acks=all</code>：这个是要求每条数据，必须是<strong>写入所有 replica 之后，才能认为是写成功了</strong>。</li><li>在 producer 端设置  <code>retries=MAX</code>（很大很大很大的一个值，无限次重试的意思）：这个是<strong>要求一旦写入失败，就无限重试</strong>，卡在这里了。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Rabbit MQ 和 Kafka 如何保证高可用？</title>
      <link href="/2019/04/13/yuque/Rabbit%20MQ%20%E5%92%8C%20Kafka%20%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%AB%98%E5%8F%AF%E7%94%A8%EF%BC%9F/"/>
      <url>/2019/04/13/yuque/Rabbit%20MQ%20%E5%92%8C%20Kafka%20%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%AB%98%E5%8F%AF%E7%94%A8%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="Rabbit-MQ-3-种模式"><a href="#Rabbit-MQ-3-种模式" class="headerlink" title="Rabbit MQ 3 种模式"></a>Rabbit MQ 3 种模式</h3><h4 id="单机模式"><a href="#单机模式" class="headerlink" title="单机模式"></a>单机模式</h4><p>Demo 级别</p><h4 id="普通集群模式（无高可用性）"><a href="#普通集群模式（无高可用性）" class="headerlink" title="普通集群模式（无高可用性）"></a>普通集群模式（无高可用性）</h4><p>普通集群模式，意思就是在多台机器上启动多个 RabbitMQ 实例，每个机器启动一个。<br><strong>这方案主要是提高吞吐量的</strong>，就是说让集群中多个节点来服务某个元数据的读写操作。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555155728234-a8334527-88ab-431a-ab9e-3422fd8ce7ab.png#align=left&amp;display=inline&amp;height=385&amp;name=image.png&amp;originHeight=567&amp;originWidth=883&amp;size=51726&amp;status=done&amp;width=601" alt="image.png"></p><h4 id="镜像集群模式（高可用性）"><a href="#镜像集群模式（高可用性）" class="headerlink" title="镜像集群模式（高可用性）"></a>镜像集群模式（高可用性）</h4><p>这种模式，才是所谓的 RabbitMQ 的高可用模式。跟普通集群模式不一样的是，在镜像集群模式下，你创建的 queue，无论元数据还是 queue 里的消息都会<strong>存在于多个实例上</strong>，就是说，每个 RabbitMQ 节点都有这个 queue 的一个完整镜像，包含 queue 的全部数据的意思。然后每次你写消息到 queue 的时候，都会<strong>自动把消息同步到多个实例的 queue 上</strong>。<br><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555155629703-abe738be-aacf-40d0-a41a-87f3e1fca4f6.png#align=left&amp;display=inline&amp;height=355&amp;name=image.png&amp;originHeight=470&amp;originWidth=630&amp;size=24344&amp;status=done&amp;width=476" alt="image.png"></p><h3 id="Kafka-的高可用性"><a href="#Kafka-的高可用性" class="headerlink" title="Kafka 的高可用性"></a>Kafka 的高可用性</h3><p>Kafka 一个最基本的架构认识：由多个 broker 组成，每个 broker 是一个节点；你创建一个 topic，这个 topic 可以划分为多个 partition，每个 partition 可以存在于不同的 broker 上，每个 partition 就放一部分数据。<br>我们假设创建了一个 topic，指定其 partition 数量是 3 个，分别在三台机器上。但是，如果第二台机器宕机了，会导致这个 topic 的 1/3 的数据就丢了，因此这个是做不到高可用的。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555156249389-18f7cdbd-1c43-4910-8229-43e1d47dedc8.png#align=left&amp;display=inline&amp;height=236&amp;name=image.png&amp;originHeight=331&amp;originWidth=712&amp;size=16230&amp;status=done&amp;width=507" alt="image.png"><br>Kafka 0.8 以后，提供了<strong> HA 机制</strong>，就是 replica（复制品） 副本机制。每个 partition 的数据都会同步到其它机器上，形成自己的多个 replica 副本。所有 replica 会选举一个 leader 出来，那么生产和消费都跟这个 leader 打交道，然后其他 replica 就是 follower。写的时候，leader 会负责把数据同步到所有 follower 上去，读的时候就直接读 leader 上的数据即可。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1555156541938-6329ff78-6d5c-4df1-b8b4-2c52d1cb1ae1.png#align=left&amp;display=inline&amp;height=466&amp;name=image.png&amp;originHeight=578&amp;originWidth=721&amp;size=44726&amp;status=done&amp;width=582" alt="image.png"><br>如果某个 broker 宕机了，没事儿，那个 broker 上面的 partition 在其他机器上都有副本的，如果这上面有某个 partition 的 leader，那么此时会从 follower 中<strong>重新选举</strong>一个新的 leader 出来，大家继续读写那个新的 leader 即可。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Rabbit MQ 和 Erlang 版本不匹配</title>
      <link href="/2019/04/13/yuque/Rabbit%20MQ%20%E5%92%8C%20Erlang%20%E7%89%88%E6%9C%AC%E4%B8%8D%E5%8C%B9%E9%85%8D/"/>
      <url>/2019/04/13/yuque/Rabbit%20MQ%20%E5%92%8C%20Erlang%20%E7%89%88%E6%9C%AC%E4%B8%8D%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.erlang.org/downloads" target="_blank" rel="noopener">安装 Erlang</a><br><a href="http://www.rabbitmq.com/download.html" target="_blank" rel="noopener">安装 RabbitMQ</a><br><strong>安装的时候版本需要匹配</strong>  <a href="http://www.rabbitmq.com/which-erlang.html" target="_blank" rel="noopener">传送门</a><br>之前因为版本不匹配的问题，搞环境搞了一上午。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 异常捕捉</title>
      <link href="/2019/04/08/yuque/Python%20%E5%BC%82%E5%B8%B8%E6%8D%95%E6%8D%89/"/>
      <url>/2019/04/08/yuque/Python%20%E5%BC%82%E5%B8%B8%E6%8D%95%E6%8D%89/</url>
      
        <content type="html"><![CDATA[<p>打印出异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">function()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">    print(msg)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Liqiubase 已有表添加字段</title>
      <link href="/2019/03/08/yuque/Liqiubase%20%E5%B7%B2%E6%9C%89%E8%A1%A8%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%AE%B5/"/>
      <url>/2019/03/08/yuque/Liqiubase%20%E5%B7%B2%E6%9C%89%E8%A1%A8%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">changeSet</span> <span class="attr">id</span>=<span class="string">"20181214081250-1"</span> <span class="attr">author</span>=<span class="string">"jhipster"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">addColumn</span> <span class="attr">tableName</span>=<span class="string">"jhi_rx"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"place"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"mobile_phone"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">addColumn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">addColumn</span> <span class="attr">tableName</span>=<span class="string">"drug"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"brand"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">addColumn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">addColumn</span> <span class="attr">tableName</span>=<span class="string">"hospital"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"qy_code"</span> <span class="attr">type</span>=<span class="string">"varchar(255)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">addColumn</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">changeSet</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Csrf 过滤</title>
      <link href="/2019/03/04/yuque/Csrf%20%E8%BF%87%E6%BB%A4/"/>
      <url>/2019/03/04/yuque/Csrf%20%E8%BF%87%E6%BB%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netmatch.drug.admin.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.support.RequestDataValueProcessor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"requestDataValueProcessor"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsrfRequestDataValueProcessor</span> <span class="keyword">implements</span> <span class="title">RequestDataValueProcessor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Pattern DISABLE_CSRF_TOKEN_PATTERN = Pattern.compile(<span class="string">"(?i)^(GET|HEAD|TRACE|OPTIONS)$"</span>);</span><br><span class="line">    <span class="keyword">private</span> String DISABLE_CSRF_TOKEN_ATTR = <span class="string">"DISABLE_CSRF_TOKEN_ATTR"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processAction</span><span class="params">(HttpServletRequest request, String action, String method)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (method != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.DISABLE_CSRF_TOKEN_PATTERN.matcher(method).matches()) &#123;</span><br><span class="line">            request.setAttribute(<span class="keyword">this</span>.DISABLE_CSRF_TOKEN_ATTR, Boolean.TRUE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            request.removeAttribute(<span class="keyword">this</span>.DISABLE_CSRF_TOKEN_ATTR);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processFormFieldValue</span><span class="params">(HttpServletRequest request, String name, String value, String type)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 原样返回value</span></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getExtraHiddenFields</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 此处是当使用spring的taglib标签&lt;form:form&gt;创建表单时候，增加的隐藏域参数</span></span><br><span class="line">        Map&lt;String, String&gt; hiddenFields = Maps.newHashMap();</span><br><span class="line">        hiddenFields.put(CsrfTokenManager.CSRF_PARAM_NAME,</span><br><span class="line">            CsrfTokenManager.createTokenForSession(request.getSession()));</span><br><span class="line">        <span class="keyword">return</span> hiddenFields;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">processUrl</span><span class="params">(HttpServletRequest request, String url)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 原样返回url</span></span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图片上传接口不过滤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netmatch.drug.admin.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.filter.authc.UserFilter;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.servlet.ShiroHttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsrfTokenFilter</span> <span class="keyword">extends</span> <span class="title">UserFilter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEADER_POST = <span class="string">"POST"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; IGNORE_URL = Lists.newArrayList(<span class="string">"/files/image"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isAccessAllowed</span><span class="params">(ServletRequest request, ServletResponse response, Object mappedValue)</span> </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        <span class="keyword">if</span> (!HEADER_POST.equals(((HttpServletRequest) request).getMethod())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(IGNORE_URL.contains(((ShiroHttpServletRequest) request).getRequestURI()))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String csrfToken = CsrfTokenManager.getTokenFromRequest(request);</span><br><span class="line">        <span class="keyword">if</span> (csrfToken == <span class="keyword">null</span> || !csrfToken.equals(httpRequest.getSession().getAttribute(</span><br><span class="line">            CsrfTokenManager.CSRF_TOKEN_FOR_SESSION_ATTR_NAME))) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        httpRequest.getSession().removeAttribute(CsrfTokenManager.CSRF_TOKEN_FOR_SESSION_ATTR_NAME);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onAccessDenied</span><span class="params">(ServletRequest request, ServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        <span class="keyword">if</span> (currentUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">            currentUser.logout();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.redirectToLogin(request, response);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netmatch.drug.admin.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsrfTokenManager</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 隐藏域参数名称</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CSRF_PARAM_NAME = <span class="string">"csrfToken"</span>;</span><br><span class="line">    <span class="comment">// session中csrfToken参数名称</span></span><br><span class="line">    public static final String CSRF_TOKEN_FOR_SESSION_ATTR_NAME = CsrfTokenManager.class.getName() + ".tokenval";</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">CsrfTokenManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在session中创建csrfToken</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createTokenForSession</span><span class="params">(HttpSession session)</span> </span>&#123;</span><br><span class="line">        String token = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">synchronized</span> (session) &#123;</span><br><span class="line">            token = (String) session</span><br><span class="line">                .getAttribute(CSRF_TOKEN_FOR_SESSION_ATTR_NAME);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> == token) &#123;</span><br><span class="line">                token = UUID.randomUUID().toString();</span><br><span class="line">                session.setAttribute(CSRF_TOKEN_FOR_SESSION_ATTR_NAME, token);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTokenFromRequest</span><span class="params">(ServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> request.getParameter(CSRF_PARAM_NAME);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>B+树</title>
      <link href="/2019/02/28/yuque/B+%E6%A0%91/"/>
      <url>/2019/02/28/yuque/B+%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>MySQL 索引底层实现。</p><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><p><strong>目的</strong>：提高查询效率</p><p><strong>原理</strong>：通过不断的缩小想要获得数据的范围来筛选出最终想要的结果，同时把随机的事件变成顺序的事件，也就是我们总是通过同一种查找方式来锁定数据。</p><p><strong>数据结构</strong>：B+树</p><p><strong>图解：</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1551345494120-a46d004f-eeca-4cca-9770-330344c41185.png#align=left&amp;display=inline&amp;height=300&amp;originHeight=300&amp;originWidth=624&amp;size=0&amp;status=done&amp;width=624" alt></p><h4 id="b-树的查找过程"><a href="#b-树的查找过程" class="headerlink" title="b+树的查找过程"></a>b+树的查找过程</h4><p>如图所示，如果要查找数据项 29，那么首先会把磁盘块 1 由磁盘加载到内存，此时发生一次 IO，在内存中用二分查找确定 29 在 17 和 35 之间，锁定磁盘块 1 的 P2 指针，内存时间因为非常短（相比磁盘的 IO）可以忽略不计，通过磁盘块 1 的 P2 指针的磁盘地址把磁盘块 3 由磁盘加载到内存，发生第二次 IO，29 在 26 和 30 之间，锁定磁盘块 3 的 P2 指针，通过指针加载磁盘块 8 到内存，发生第三次 IO，同时内存中做二分查找找到 29，结束查询，总计三次 IO。真实的情况是，3 层的 b+树可以表示上百万的数据，如果上百万的数据查找只需要三次 IO，性能提高将是巨大的，如果没有索引，每个数据项都要发生一次 IO，那么总共需要百万次的 IO，显然成本非常非常高。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Shiro csrf 拦截请求</title>
      <link href="/2019/02/27/yuque/Shiro%20csrf%20%E6%8B%A6%E6%88%AA%E8%AF%B7%E6%B1%82/"/>
      <url>/2019/02/27/yuque/Shiro%20csrf%20%E6%8B%A6%E6%88%AA%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>今天遇到一个问题，我的 form 表单写的没有错，用 js 生成的 action，不知道什么原因一直提交不上去。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">id</span>=<span class="string">"form"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeState</span>(<span class="params">that</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> id = $(that).attr(<span class="string">"applyid"</span>);</span><br><span class="line">  $(<span class="string">"#applyId"</span>).val(id);</span><br><span class="line">  $(<span class="string">"#form"</span>).attr(<span class="string">"action"</span>, <span class="string">"/feedbacks/"</span> + id + <span class="string">"/state"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交表单页面直接跳到登录页面，推测是请求给 shiro 拦截了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// shiro 拦截器</span></span><br><span class="line">filterMap.put(<span class="string">"csrf"</span>, <span class="keyword">new</span> CsrfTokenFilter());</span><br><span class="line">filterChainDefinitionMap.put(<span class="string">"/**"</span>, <span class="string">"authc,csrf"</span>);</span><br></pre></td></tr></table></figure><p>最后随便加了个 action。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form</span><br><span class="line">  method=<span class="string">"post"</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span></span><br><span class="line">  role=<span class="string">"form"</span></span><br><span class="line">  id=<span class="string">"form"</span></span><br><span class="line">  th:action=<span class="string">"@&#123;/user&#125;"</span></span><br><span class="line">&gt;&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure><p>html 审查元素的时候，页面会增加一个 csrfToken，可以正常提交了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"hidden"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">name</span>=<span class="string">"csrfToken"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">value</span>=<span class="string">"2bdaaca5-ebf9-450f-a25a-8faacd018965"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>点击弹出模态框，显示详情</title>
      <link href="/2019/02/27/yuque/%E7%82%B9%E5%87%BB%E5%BC%B9%E5%87%BA%E6%A8%A1%E6%80%81%E6%A1%86%EF%BC%8C%E6%98%BE%E7%A4%BA%E8%AF%A6%E6%83%85/"/>
      <url>/2019/02/27/yuque/%E7%82%B9%E5%87%BB%E5%BC%B9%E5%87%BA%E6%A8%A1%E6%80%81%E6%A1%86%EF%BC%8C%E6%98%BE%E7%A4%BA%E8%AF%A6%E6%83%85/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">onpenShowModal</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"#show"</span>).modal(<span class="string">'show'</span>);</span><br><span class="line">            <span class="keyword">var</span> title = $(obj).data(<span class="string">"title"</span>)</span><br><span class="line">            $(<span class="string">"#modalContent"</span>).html(title);</span><br><span class="line">        &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"mt-btn"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">th:data-title</span>=<span class="string">"*&#123;content&#125;"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-toggle</span>=<span class="string">"modal"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">onclick</span>=<span class="string">"onpenShowModal(this)"</span></span></span><br><span class="line"><span class="tag">  &gt;</span>查看详情<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal"</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog "</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"modal-title text-md text-dark"</span>&gt;</span>消息详情<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted"</span> <span class="attr">id</span>=<span class="string">"modalContent"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-white"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span></span><br><span class="line">          取消</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">"button"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"btn btn-primary confirm"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">data-dismiss</span>=<span class="string">"modal"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          确认</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 下载图片</title>
      <link href="/2019/02/27/yuque/Python%20%E4%B8%8B%E8%BD%BD%E5%9B%BE%E7%89%87/"/>
      <url>/2019/02/27/yuque/Python%20%E4%B8%8B%E8%BD%BD%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="comment"># 'Host': 'i.meizitu.net',</span></span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'content-type'</span>: <span class="string">"application/json"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s = requests.session()  <span class="comment"># 保留会话</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downIMG</span><span class="params">(url, fileName)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = str(url).split(<span class="string">"?"</span>)[<span class="number">0</span>]</span><br><span class="line">        LAST = str(url).split(<span class="string">"."</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># 没有文件夹，则创建文件夹</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'D:/Image/'</span> + fileName):</span><br><span class="line">            os.mkdir(<span class="string">'D:/Image/'</span> + fileName)</span><br><span class="line"></span><br><span class="line">        url_re = s.get(url.strip(), headers=headers)</span><br><span class="line">        <span class="keyword">if</span> url_re.status_code == <span class="number">200</span>:</span><br><span class="line">            open(<span class="string">"D:/Image/"</span> + fileName + <span class="string">"/"</span> + initImageName() + <span class="string">"."</span> + LAST, <span class="string">'wb'</span>).write(url_re.content)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"image-run-error.csv"</span>, <span class="string">"a"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span>  csvfile:</span><br><span class="line">            writer = csv.writer(csvfile)</span><br><span class="line">            writer.writerow(fileName, url)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 随机生成文件名</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">initImageName</span><span class="params">()</span>:</span></span><br><span class="line">    ran_str = <span class="string">''</span>.join(random.sample(string.ascii_letters + string.digits, <span class="number">8</span>))</span><br><span class="line">    <span class="keyword">return</span> ran_str</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    images = pd.read_csv(<span class="string">"drug-image-url.csv"</span>)</span><br><span class="line">    images.fillna(<span class="string">''</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">    images = np.array(images).tolist()</span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            downIMG(image[<span class="number">2</span>], image[<span class="number">0</span>] + <span class="string">","</span> + str(image[<span class="number">1</span>]).replace(<span class="string">"*"</span>, <span class="string">"_"</span>))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">          <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python URL汉字加密</title>
      <link href="/2019/02/20/yuque/Python%20URL%E6%B1%89%E5%AD%97%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/02/20/yuque/Python%20URL%E6%B1%89%E5%AD%97%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">quote(keyWord)</span><br></pre></td></tr></table></figure><p>加密对应 js 的  encodeURI() 方法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信验证服务器有效性</title>
      <link href="/2019/02/19/yuque/%E5%BE%AE%E4%BF%A1%E9%AA%8C%E8%AF%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9C%89%E6%95%88%E6%80%A7/"/>
      <url>/2019/02/19/yuque/%E5%BE%AE%E4%BF%A1%E9%AA%8C%E8%AF%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9C%89%E6%95%88%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>后台代码</p><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.util.Sha1Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WechatController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 微信请求接收</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/weixin"</span>, produces = <span class="string">"text/plain;charset=UTF-8"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">weixin</span><span class="params">(@RequestParam(name = <span class="string">"signature"</span>)</span> String signature,</span></span><br><span class="line"><span class="function">                                 @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"timestamp"</span>)</span> String timestamp,</span></span><br><span class="line"><span class="function">                                 @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"nonce"</span>)</span> String nonce,</span></span><br><span class="line"><span class="function">                                 @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"echostr"</span>)</span> String echostr) </span>&#123;</span><br><span class="line">        String auths[] = &#123;token(自己填的 token), timestamp, nonce&#125;;</span><br><span class="line">        Arrays.sort(auths);</span><br><span class="line">        <span class="keyword">if</span> (signature.equals(Sha1Util.getSha1(auths[<span class="number">0</span>] + auths[<span class="number">1</span>] + auths[<span class="number">2</span>]))) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != echostr) &#123;</span><br><span class="line">                <span class="keyword">return</span> ResponseEntity.ok(<span class="keyword">this</span>.auth(echostr));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> echostr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">auth</span><span class="params">(String echostr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> echostr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(<span class="string">"测试成功！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Sha1-加密"><a href="#Sha1-加密" class="headerlink" title="Sha1 加密"></a>Sha1 加密</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sha1Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSha1</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == str || <span class="number">0</span> == str.length())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span>[] hexDigits = &#123; <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>,</span><br><span class="line">                <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest mdTemp = MessageDigest.getInstance(<span class="string">"SHA1"</span>);</span><br><span class="line">            mdTemp.update(str.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] md = mdTemp.digest();</span><br><span class="line">            <span class="keyword">int</span> j = md.length;</span><br><span class="line">            <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line">                <span class="keyword">byte</span> byte0 = md[i];</span><br><span class="line">                buf[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                buf[k++] = hexDigits[byte0 &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(buf);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="微信后台配置"><a href="#微信后台配置" class="headerlink" title="微信后台配置"></a>微信后台配置</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1550543352291-07d9129e-ff54-408f-9741-c35d8ea5f0d4.png#align=left&amp;display=inline&amp;height=738&amp;name=%7BEM%5DBC%5DZXS5%287UG%5DUG%25ZRHM.png&amp;originHeight=801&amp;originWidth=810&amp;size=62939&amp;width=746" alt="{EM]BC]ZXS5(7UG]UG%ZRHM.png"></p><p>后台的 token 就是控制器中自己配置的 token<br>url 就填 http://你的链接/weixin</p><p>提交就验证成功了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 常用命令</title>
      <link href="/2019/02/19/yuque/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/02/19/yuque/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><strong>镜像</strong>（<code>Image</code>）和<strong>容器</strong>（<code>Container</code>）的关系，就像是面向对象程序设计中的  <code>类</code>  和  <code>实例</code>  一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p><p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的命名空间。因此容器可以拥有自己的  <code>root</code>  文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。</p><p>容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。</p><p>文件拷贝</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp /home/ubuntu/Java/ROOT f853e6b9cc5f:/var/tmp/tomcat/apache-tomcat-8.5.8/webapps/</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 重启 docker 镜像</span><br><span class="line">service docker restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看所有镜像</span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除镜像 Image</span><br><span class="line">docker rmi 5b821518a2dd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 正在运行容器</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看docker容器</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 启动tomcat:7镜像</span><br><span class="line">docker run -p 8080:8080 tomcat:7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以后台守护进程的方式启动</span><br><span class="line">docker run -d tomcat:8</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 停止一个容器</span><br><span class="line">docker stop b840db1d182b</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 进入一个容器</span><br><span class="line">docker attach d48b21a7e439</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 进入正在运行容器并以命令行交互</span><br><span class="line">docker exec -it e9410ee182bd /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以交互的方式运行</span><br><span class="line">docker run -i -t -p 8081:8080 tomcat:7 /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i：表示以“交互模式”运行容器</span><br><span class="line">-t：表示容器启动后会进入其命令行</span><br><span class="line">-v：表示需要将本地哪个目录挂载到容器中，格式：-v &lt;宿主机目录&gt;:&lt;容器目录&gt;</span><br></pre></td></tr></table></figure><p>删除停止的容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps --all -q -f status=exited)</span><br></pre></td></tr></table></figure><p>删除所有容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm `sudo docker ps -a -q`</span><br></pre></td></tr></table></figure><p>删除没有使用的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f $(docker images | grep "&lt;none&gt;" | awk "&#123;print \$3&#125;")</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 部署 SpringBoot 项目</title>
      <link href="/2019/02/18/yuque/Docker%20%E9%83%A8%E7%BD%B2%20SpringBoot%20%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/02/18/yuque/Docker%20%E9%83%A8%E7%BD%B2%20SpringBoot%20%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>java 8 环境，Dockerfile<br>spring boot 打好的 jar 包 wechat-0.0.1-SNAPSHOT.jar，放在 Dockerfile 同级目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">VOLUME /tmp</span><br><span class="line">RUN mkdir /app</span><br><span class="line">ADD wechat-0.0.1-SNAPSHOT.jar app.jar</span><br><span class="line">RUN bash -c 'touch /app.jar'</span><br><span class="line">ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]</span><br></pre></td></tr></table></figure><p>根据  Dockerfile 生成镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t wechat .</span><br></pre></td></tr></table></figure><p>将项目映射到 8080 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8090 wechat</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 一次 rm -rf</title>
      <link href="/2019/02/14/yuque/Linux%20%E4%B8%80%E6%AC%A1%20rm%20-rf/"/>
      <url>/2019/02/14/yuque/Linux%20%E4%B8%80%E6%AC%A1%20rm%20-rf/</url>
      
        <content type="html"><![CDATA[<p>我准备删除 /usr/local 目录下的 admin 开头的多个文件</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1550111607385-5c66fb1d-3a5a-49e4-89de-666b642d061b.png#align=left&amp;display=inline&amp;height=129&amp;name=image.png&amp;originHeight=129&amp;originWidth=757&amp;size=120517&amp;width=757" alt="image.png"></p><p>我使用了 rm -rf amdin* ，命令没有输错，但是删除完了之后再查看这个目录，很多东西都被删除了。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1550111657401-1fd3cf0a-7d46-4a2a-a827-b7ea436a6bc4.png#align=left&amp;display=inline&amp;height=64&amp;name=image.png&amp;originHeight=64&amp;originWidth=480&amp;size=33875&amp;width=480" alt="image.png"></p><p>吓尿了 - -<br>我还不知道是什么原因，只能当作给自己提个醒，以后尽量不要用通配，全名删除更安全。<br>庆幸的是 /usr/local 目录下没有什么特别重要的文件。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ECharts 图形自适应</title>
      <link href="/2019/01/23/yuque/ECharts%20%E5%9B%BE%E5%BD%A2%E8%87%AA%E9%80%82%E5%BA%94/"/>
      <url>/2019/01/23/yuque/ECharts%20%E5%9B%BE%E5%BD%A2%E8%87%AA%E9%80%82%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<h3 id="官方实例"><a href="#官方实例" class="headerlink" title="官方实例"></a>官方实例</h3><p><a href="https://echarts.baidu.com/examples/" target="_blank" rel="noopener">https://echarts.baidu.com/examples/</a></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">//初始化</span></span><br><span class="line">   initMatch = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="comment">// 饼图</span></span><br><span class="line">     initPieChart(<span class="string">"pie1Counts"</span>, <span class="string">""</span>, pieTypes, pie1Counts, []);</span><br><span class="line">     <span class="comment">// 树状图</span></span><br><span class="line">     initBarChart(<span class="string">"rxUse"</span>, pieTypes, pie1Counts);</span><br><span class="line">   &#125;</span><br><span class="line">   initMatch();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>饼图</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  initPieChart = <span class="function"><span class="keyword">function</span> (<span class="params">id, title, legendata, seriesdata, colorDate</span>) </span>&#123;</span><br><span class="line">    myChart = echarts.init(<span class="built_in">document</span>.getElementById(id));</span><br><span class="line">    initPieOption(title, legendata, seriesdata, colorDate);</span><br><span class="line">    myChart.setOption(option);</span><br><span class="line">    <span class="comment">// 添加到 charts 数组</span></span><br><span class="line">    charts.push(myChart)</span><br><span class="line">  &#125;;</span><br><span class="line">  initPieOption = <span class="function"><span class="keyword">function</span> (<span class="params">title, legendata, seriesdata, colorDate</span>) </span>&#123;</span><br><span class="line">    option = &#123;</span><br><span class="line">      tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,</span><br><span class="line">        formatter: <span class="string">"&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      series: [</span><br><span class="line">        &#123;</span><br><span class="line">          name: <span class="string">'访问来源'</span>,</span><br><span class="line">          type: <span class="string">'pie'</span>,</span><br><span class="line">          radius: [<span class="string">'50%'</span>, <span class="string">'70%'</span>],</span><br><span class="line">          avoidLabelOverlap: <span class="literal">false</span>,</span><br><span class="line">          label: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">              show: <span class="literal">false</span>,</span><br><span class="line">              position: <span class="string">'center'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">              show: <span class="literal">true</span>,</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                fontSize: <span class="string">'14'</span>,</span><br><span class="line">                fontWeight: <span class="string">'bold'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          labelLine: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">              show: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          data: seriesdata</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="comment">// color: colorDate</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>柱状图</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  initBarChart = <span class="function"><span class="keyword">function</span> (<span class="params">id, legendata, seriesdata</span>) </span>&#123;</span><br><span class="line">    myChart = echarts.init(<span class="built_in">document</span>.getElementById(id));</span><br><span class="line">    initBarOption(legendata, seriesdata);</span><br><span class="line">    myChart.setOption(option);</span><br><span class="line">    charts.push(myChart)</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 初始化柱状图</span></span><br><span class="line">  initBarOption = <span class="function"><span class="keyword">function</span> (<span class="params">legendata, seriesdata</span>) </span>&#123;</span><br><span class="line">    option = &#123;</span><br><span class="line">      xAxis: &#123;</span><br><span class="line">        type: <span class="string">'category'</span>,</span><br><span class="line">        data: legendata</span><br><span class="line">      &#125;,</span><br><span class="line">      yAxis: &#123;</span><br><span class="line">        type: <span class="string">'value'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      series: [&#123;</span><br><span class="line">        data: seriesdata,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        <span class="comment">// begin</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> colorList = [<span class="string">'rgb(205,85,85)'</span>, <span class="string">'rgb(210,205,30)'</span>, <span class="string">'rgb(135,206,235)'</span>, <span class="string">'rgb(152,80,152)'</span>, <span class="string">'rgb(238,232,170)'</span>, <span class="string">'rgb(205,85,85)'</span>, <span class="string">'rgb(210,205,30)'</span>];</span><br><span class="line">              <span class="keyword">return</span> colorList[params.dataIndex];</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 鼠标悬停</span></span><br><span class="line">          emphasis: &#123;</span><br><span class="line">            shadowBlur: <span class="number">10</span>,</span><br><span class="line">            shadowOffsetX: <span class="number">0</span>,</span><br><span class="line">            shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">     ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ECharts 自适应</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> charts = [];</span><br><span class="line">  <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 在所有图表之后</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; charts.length; i++) &#123;</span><br><span class="line">      charts[i].resize();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Liquibase 使用</title>
      <link href="/2019/01/18/yuque/Liquibase%20%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/01/18/yuque/Liquibase%20%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.liquibase&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;liquibase-core&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/png/113243/1547778589258-b6dddbbf-2d29-4e81-b176-1fbe108d47c3.png#align=left&amp;display=inline&amp;height=511&amp;name=PN%7B%603%28%5BC%5D2NWR%40X%7DEX%40TSAK.png&amp;originHeight=511&amp;originWidth=437&amp;size=23713&amp;width=437" alt="PN{`3([C]2NWR@X}EX@TSAK.png"></p><h4 id="master-xml"><a href="#master-xml" class="headerlink" title="master.xml"></a>master.xml</h4><p>加载配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">databaseChangeLog</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811101308_add_entity_Student_Info.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811101309_add_entity_Teacher_Info.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811101310_add_entity_Course.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811182205_add_entity_CoursePlan.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811181517_add_entity_Student_Appraise.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201811181517_add_entity_Teacher_Appraise.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201812042230_add_entity_User.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201812080813_add_entity_Permission.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/201812182216_add_entity_User_File.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/liquibase/changelog/99999999999999_import_data.xml"</span> <span class="attr">relativeToChangelogFile</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseChangeLog</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="import-data-xml"><a href="#import-data-xml" class="headerlink" title="import_data.xml"></a>import_data.xml</h4><p>导入数据</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">databaseChangeLog</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">changeSet</span> <span class="attr">id</span>=<span class="string">"course"</span> <span class="attr">author</span>=<span class="string">"jhipster"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">loadData</span> <span class="attr">encoding</span>=<span class="string">"UTF-8"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">file</span>=<span class="string">"config/liquibase/course.csv"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">separator</span>=<span class="string">";"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">tableName</span>=<span class="string">"course"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">changeSet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">databaseChangeLog</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="entity-xml"><a href="#entity-xml" class="headerlink" title="entity.xml"></a>entity.xml</h4><p>生成数据库表结构</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">databaseChangeLog</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"now"</span> <span class="attr">value</span>=<span class="string">"now()"</span> <span class="attr">dbms</span>=<span class="string">"mysql"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">changeSet</span> <span class="attr">id</span>=<span class="string">"course"</span> <span class="attr">author</span>=<span class="string">"jhipster"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">preConditions</span> <span class="attr">onFail</span>=<span class="string">"MARK_RAN"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">not</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tableExists</span> <span class="attr">tableName</span>=<span class="string">"course"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">not</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">preConditions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">createTable</span> <span class="attr">tableName</span>=<span class="string">"course"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"varchar(22)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">primaryKey</span>=<span class="string">"true"</span> <span class="attr">nullable</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"varchar(50)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"teacher_id"</span> <span class="attr">type</span>=<span class="string">"varchar(22)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"jhi_date"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"start_time"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"end_time"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"created_by"</span> <span class="attr">type</span>=<span class="string">"varchar(20)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"created_date"</span> <span class="attr">type</span>=<span class="string">"timestamp"</span> <span class="attr">defaultValueDate</span>=<span class="string">"$&#123;now&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constraints</span> <span class="attr">nullable</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">createTable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">changeSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseChangeLog</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建博客</title>
      <link href="/2019/01/12/yuque/Hexo%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/01/12/yuque/Hexo%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h4><p>验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><p>验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>新建文件夹，打开命令行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo -v</span><br><span class="line"><span class="meta">#</span> 初始化hexo</span><br><span class="line">hexo init</span><br><span class="line"><span class="meta">#</span> 安装组件</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4 id="Hexo-二次创建"><a href="#Hexo-二次创建" class="headerlink" title="Hexo 二次创建"></a>Hexo 二次创建</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 打开一个文件夹</span><br><span class="line">hexo init filename</span><br><span class="line">cd filename</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4 id="配置到-GitHub"><a href="#配置到-GitHub" class="headerlink" title="配置到 GitHub"></a>配置到 GitHub</h4><p>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourname"</span><br><span class="line">git config --global user.email "youremail"</span><br></pre></td></tr></table></figure><p>在配置文件<code>_config.yml</code>中，找到<code>Deployment</code>，进行修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 上传到github</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hello-world   //在此处添加你的标题。</span><br><span class="line">date: 2014-11-7 08:55:29   //在此处输入你编辑这篇文章的时间。</span><br><span class="line">categories: Exercise   //在此处输入这篇文章的分类。</span><br><span class="line">toc: true  //在此处设定是否开启目录，需要主题支持。</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><h4 id="添加来必力评论"><a href="#添加来必力评论" class="headerlink" title="添加来必力评论"></a>添加来必力评论</h4><p>修改<code>_config.yml</code>文件，开启来必利评论：<code>livere: true</code></p><p>然后在<code>\yilia\layout\_partial\post</code>目录下添加<code>livere.ejs</code> ，然后把 livere 安装代码复制进去，文件内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 来必力City版安装代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"你的那个id"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">d, s</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> j,</span></span><br><span class="line">        e = d.getElementsByTagName(s)[0];</span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (<span class="keyword">typeof</span> LivereTower === <span class="string">"function"</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">      j = d.createElement(s);</span><br><span class="line"><span class="javascript">      j.src = <span class="string">"https://cdn-city.livere.com/js/embed.dist.js"</span>;</span></span><br><span class="line"><span class="javascript">      j.async = <span class="literal">true</span>;</span></span><br><span class="line">      e.parentNode.insertBefore(j, e);</span><br><span class="line"><span class="javascript">    &#125;)(<span class="built_in">document</span>, <span class="string">"script"</span>);</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">noscript</span>&gt;</span> 为正常使用来必力评论功能请激活JavaScript<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- City版安装代码已完成 --&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>\yilia\layout\_partial</code> 的<code>article.ejs</code>中<code>&lt;% if (!index &amp;&amp; post.comments){ %&gt;</code> ，后面添加如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.livere)&#123; %&gt;</span><br><span class="line">&lt;%- partial(<span class="string">'post/livere'</span>, &#123;</span><br><span class="line">    key: post.slug,</span><br><span class="line">    title: post.title,</span><br><span class="line">    url: config.url+url_for(post.path)</span><br><span class="line">  &#125;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h4 id="Valine-评论"><a href="#Valine-评论" class="headerlink" title="Valine 评论"></a>Valine 评论</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ioliu.cn/2017/add-valine-comments-to-your-blog/#comments</span><br></pre></td></tr></table></figure><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><h4 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h4><ol><li><strong>fexo</strong></li></ol><p><a href="http://forsigner.com/fexo-doc-zh-cn/" target="_blank" rel="noopener">http://forsigner.com/fexo-doc-zh-cn/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git clone git@github.com:forsigner/fexo.git themes/fexo</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Maupassant</strong></li></ol><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">https://www.haomwei.com/technology/maupassant-hexo.html</a></p><p>上面两个是我比较喜欢的主题，你也可以在<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">这里</a>寻找更多主题</p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--网易云音乐播放器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag">  <span class="attr">frameborder</span>=<span class="string">"no"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">border</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">marginwidth</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">marginheight</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">"330"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">"450"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=0&amp;id=2268258693&amp;auto=0&amp;height=430"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加-RSS"><a href="#添加-RSS" class="headerlink" title="添加 RSS"></a>添加 RSS</h3><p>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>修改配置文件，添加如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Extensions</span><br><span class="line"><span class="meta">#</span># Plugins: http://hexo.io/plugins/</span><br><span class="line"><span class="meta">#</span>RSS订阅</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line"><span class="meta">#</span>Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br></pre></td></tr></table></figure><h3 id="同步语雀知识库"><a href="#同步语雀知识库" class="headerlink" title="同步语雀知识库"></a>同步语雀知识库</h3><p>参考：<a href="https://www.yuque.com/page/luan.ma/yuque2blog" target="_blank" rel="noopener">https://www.yuque.com/page/luan.ma/yuque2blog</a></p><p>安装 yuque-hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g yuque-hexo</span><br></pre></td></tr></table></figure><p>注册语雀，创建知识库，获得你的个人路径和知识库的名字，比如我的博客的知识库是 <a href="https://www.yuque.com/glacier/github.io" target="_blank" rel="noopener">https://www.yuque.com/glacier/github.io</a></p><p>修改  package.json 文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"your hexo project"</span>, <span class="comment">//如果原来已经有这个不用再加了，直接加下面的就可以</span></span><br><span class="line">  <span class="attr">"yuqueConfig"</span>: &#123;</span><br><span class="line">    <span class="attr">"baseUrl"</span>: <span class="string">"https://www.yuque.com/api/v2"</span>,</span><br><span class="line">    <span class="attr">"login"</span>: <span class="string">"glacier"</span>,</span><br><span class="line">    <span class="attr">"repo"</span>: <span class="string">"github.io"</span>,</span><br><span class="line">    <span class="attr">"mdNameFormat"</span>: <span class="string">"slug"</span>,</span><br><span class="line">    <span class="attr">"postPath"</span>: <span class="string">"source/_posts/yuque"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同步文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yuque-hexo sync</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>好的代码应该是便于维护的</title>
      <link href="/2019/01/12/yuque/%E5%A5%BD%E7%9A%84%E4%BB%A3%E7%A0%81%E5%BA%94%E8%AF%A5%E6%98%AF%E4%BE%BF%E4%BA%8E%E7%BB%B4%E6%8A%A4%E7%9A%84/"/>
      <url>/2019/01/12/yuque/%E5%A5%BD%E7%9A%84%E4%BB%A3%E7%A0%81%E5%BA%94%E8%AF%A5%E6%98%AF%E4%BE%BF%E4%BA%8E%E7%BB%B4%E6%8A%A4%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h4 id="好的命名比注释要好"><a href="#好的命名比注释要好" class="headerlink" title="好的命名比注释要好"></a>好的命名比注释要好</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 团队统一定义标记：</span><br><span class="line">TODO  待处理的问题</span><br><span class="line">FIXME  已知有问题的代码</span><br><span class="line">HACK 不得不采用的粗糙的解决方案</span><br></pre></td></tr></table></figure><p>样式修改 - 要么原生 JS 要么 JQuery  用 submit 事件</p><p>复制过来不用的代码都删掉</p><p>源代码中的 html 注释是一种厌物, 增加阅读难度</p><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>注释模板 不要留空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 典型的烂注释：</span><br><span class="line">不恰当的信息</span><br><span class="line">废弃的注释</span><br><span class="line">冗余注释</span><br><span class="line">糟糕的注释</span><br><span class="line">注释掉的代码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 唯一真正好的注释是你想办法不去写的注释：</span><br><span class="line">不要有循规式注释，比如 setter/getter 注释</span><br><span class="line">不要添加日志式注释，比如修改时间等信息（ git 可以做的事情）</span><br><span class="line">注释一定是表达代码之外的东西，代码可以包含的内容，注释中一定不要出现</span><br><span class="line">如果有必要注释，请注释意图（why），而不要去注释实现（how)，大家都会看代码</span><br><span class="line">适当添加警示注释</span><br></pre></td></tr></table></figure><h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h4><p>了解一些设计模式，这样看到名字里有 proxy，builder，factory 之类的，就心领神会了</p><p>代码都是分模块的，有的是 core，有的是 util，parser 之类的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">尽可能使用标准命名方法，比如设计模式，通用学术名词等</span><br><span class="line">命名要找更有表现力的词</span><br><span class="line">使用更专业的词，比如不用 get 而使用 fetch 或者 download</span><br><span class="line">避免空泛的名字，像 tmp</span><br><span class="line">使用具体的名字来细致的描述事物</span><br><span class="line">给变量名带上重要的细节，比如加上单位ms等</span><br><span class="line">为作用域大的名字采用更长的名字，作用域小的使用短名字</span><br><span class="line">变量类型为布尔值表达加上 is，has ，can ，should 这样的词会更明确</span><br><span class="line">变量名称长短应该与其作用域对应</span><br><span class="line">别害怕长名称，长而具有描述性的名称比短而令人费解的名称好</span><br><span class="line">函数名称应该说明副作用，名称应该表达函数，变量或类的一切信息，请不要掩盖副作用，比如 CreateAndReturnXXX</span><br></pre></td></tr></table></figure><h4 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h4><blockquote><p>commit 的 message 一定要规范</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">feat：新功能（feature）</span><br><span class="line">fix：修补bug</span><br><span class="line">docs：文档（documentation）</span><br><span class="line">style： 格式（不影响代码运行的变动）</span><br><span class="line">refactor：重构（即不是新增功能，也不是修改bug的代码变动）</span><br><span class="line">test：增加测试</span><br><span class="line">chore：构建过程或辅助工具的变动</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/W9VOXPPZgChwi9daJKIH2A" target="_blank" rel="noopener">如何避免自己写的代码成为别人眼中的一坨屎！</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 数据库操作</title>
      <link href="/2019/01/12/yuque/Python%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/01/12/yuque/Python%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line"><span class="comment"># Connect to the database</span></span><br><span class="line">connection = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line">                             user=<span class="string">'user'</span>,</span><br><span class="line">                             password=<span class="string">'passwd'</span>,</span><br><span class="line">                             db=<span class="string">'db'</span>,</span><br><span class="line">                             charset=<span class="string">'utf8mb4'</span>,</span><br><span class="line">                             cursorclass=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">        <span class="comment"># Create a new record</span></span><br><span class="line">        sql = <span class="string">"INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)"</span></span><br><span class="line">        cursor.execute(sql, (<span class="string">'webmaster@python.org'</span>, <span class="string">'very-secret'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># connection is not autocommit by default. So you must commit to save</span></span><br><span class="line">    <span class="comment"># your changes.</span></span><br><span class="line">    connection.commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">        <span class="comment"># Read a single record</span></span><br><span class="line">        sql = <span class="string">"SELECT `id`, `password` FROM `users` WHERE `email`=%s"</span></span><br><span class="line">        cursor.execute(sql, (<span class="string">'webmaster@python.org'</span>,))</span><br><span class="line">        result = cursor.fetchone()</span><br><span class="line">        print(result)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    connection.close()</span><br></pre></td></tr></table></figure><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接数据库</span></span><br><span class="line">conn = pymysql.connect(</span><br><span class="line">    <span class="string">"localhost"</span>,</span><br><span class="line">    <span class="string">"root"</span>,</span><br><span class="line">    <span class="string">"123456"</span>,</span><br><span class="line">    <span class="string">"drug"</span>,</span><br><span class="line">    charset=<span class="string">'utf8'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">sqlCount = <span class="string">"SELECT COUNT(0) FROM DWRS_SIM_SDML WHERE YPDM ='210000280' AND YPGG = '0.25g*16'"</span></span><br><span class="line">sqlResult = <span class="string">"SELECT YPFL FROM DWRS_SIM_SDML WHERE YPDM ='210000280' AND YPGG = '0.25g*16'"</span></span><br><span class="line"></span><br><span class="line">typeList = [<span class="string">"西药"</span>, <span class="string">"中药"</span>, <span class="string">"草药"</span>, <span class="string">"诊疗"</span>, <span class="string">"医院制剂"</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findType</span><span class="params">(sqlCount, sqlResult)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            count = cursor.execute(sqlCount)</span><br><span class="line">            conn.commit()</span><br><span class="line">            print(count)</span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">                cursor.execute(sqlResult)</span><br><span class="line">                result = cursor.fetchone()</span><br><span class="line">                result = str(result[<span class="number">0</span>]).replace(<span class="string">"0"</span>, <span class="string">""</span>)</span><br><span class="line">                print(typeList[int(result)])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"出错啦！"</span>)</span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭数据库连接</span></span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    findType(sqlCount, sqlResult)</span><br></pre></td></tr></table></figure><h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDrugs</span><span class="params">(start, end)</span>:</span></span><br><span class="line">    sql = <span class="string">"SELECT drugSpec.code,spec.name FROM drug  LEFT JOIN drug_spec AS drugSpec ON drug.id = drugSpec.drug_id "</span> \</span><br><span class="line">          <span class="string">"LEFT JOIN spec ON spec.id = drugSpec.spec_id LIMIT %s,%s"</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            cursor.execute(sql, (start, end,))</span><br><span class="line">            result = cursor.fetchall()</span><br><span class="line">            print(result)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"find error!"</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令</title>
      <link href="/2019/01/12/yuque/Git%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/01/12/yuque/Git%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入你的github 注册的ID</span></span><br><span class="line">git config -<span class="literal">-global</span> user.name <span class="string">"Your Name"</span></span><br><span class="line"><span class="comment"># 输入你的github 注册的邮箱</span></span><br><span class="line">git config -<span class="literal">-global</span> user.email <span class="string">"email@example.com"</span></span><br></pre></td></tr></table></figure><p>生成指定名字的密钥</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">"邮箱地址"</span> <span class="operator">-f</span> ~/.ssh/github_jslite</span><br></pre></td></tr></table></figure><p>会生成 github_jslite 和 github_jslite.pub 这两个文件</p><p>登陆 GitHub，在 settings 里面添加 SSH Keys，添加 SSH Key，在 Key 文本框里粘贴 github_jslite.pub 文件的内容，即可。</p><h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认是master分支</span></span><br><span class="line">git add file1.txt</span><br><span class="line">git add file2.txt file3.txt</span><br><span class="line">git commit <span class="literal">-m</span> <span class="string">"add 3 files."</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## commit 之后github 仓库内容还不会更改，只会在你本地仓库进行修改，还需要push到仓库</span></span><br><span class="line"><span class="comment">## 推送主分支</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">## 推送dev分支</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm <span class="literal">-rf</span> directory</span><br><span class="line">git add <span class="literal">-A</span></span><br><span class="line">git commit <span class="literal">-m</span> <span class="string">'remove dir'</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h4 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建dev分支 并切换到dev</span></span><br><span class="line">git checkout <span class="literal">-b</span> dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## 相当于下面两条命令</span></span><br><span class="line">git branch dev</span><br><span class="line">git checkout dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看当前分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment">## 将dev合并到 master</span></span><br><span class="line">git merge dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除dev分支</span></span><br><span class="line">git branch <span class="literal">-d</span> dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看当前分支</span></span><br><span class="line">git branch   <span class="comment">## 删除dev，这时候只剩master，主分支了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 推送主分支</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">## 推送dev分支</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看历史</span></span><br><span class="line"><span class="variable">$</span> git log</span><br><span class="line">commit <span class="number">87</span>c9ab105e1ff2886d5f603954d72859cba8769a</span><br><span class="line">Author: heyglacier &lt;<span class="number">2284711614</span>@qq.com&gt;</span><br><span class="line">Date:   Wed Jun <span class="number">27</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">19</span> <span class="number">2018</span> +<span class="number">0800</span></span><br><span class="line"></span><br><span class="line">    specEditController 页面误删？</span><br><span class="line"></span><br><span class="line"><span class="comment">## 回退到指定版本</span></span><br><span class="line"><span class="variable">$</span> git reset -<span class="literal">-hard</span> d53a025f3e760fe1f1a7a116750def90cd1aaa5d</span><br></pre></td></tr></table></figure><p>PS：</p><p>命令行还是比较麻烦的，还是建议使用 IDEA 这样的集成工具。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 配置定时任务</title>
      <link href="/2019/01/12/yuque/Linux%20%E9%85%8D%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
      <url>/2019/01/12/yuque/Linux%20%E9%85%8D%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置定时任务</span></span><br><span class="line">crontab <span class="literal">-e</span></span><br><span class="line"><span class="number">00</span> <span class="number">03</span> * * * /<span class="keyword">data</span>/mysql_backup.sh</span><br><span class="line">*  *  *  *  *   command</span><br><span class="line">分 时 天  月 星期 命令</span><br></pre></td></tr></table></figure><p><strong>shell 脚本（定时备份 mysql 数据库，并根据当天日期打包）</strong><br>**</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">backupdir=/data/mysql_backup</span><br><span class="line">time=` date +%Y%m%d%H`</span><br><span class="line">mysqldump -uroot -p'netmatch' drug-app &gt; drug_app_$time.sql</span><br><span class="line">mysqldump -uroot -p'netmatch' drug-rx &gt; drug_rx_$time.sql</span><br><span class="line">mysqldump -uroot -p'netmatch' drug-task &gt; drug_task_$time.sql</span><br><span class="line">tar -cf sql_$time.tar *.sql</span><br><span class="line">rm -rf *.sql</span><br><span class="line">find $backupdir -name "db_*.sql.gz" -type f -mtime +5 -exec rm &#123;&#125; \; &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
